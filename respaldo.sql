--
-- PostgreSQL database dump
--

-- Dumped from database version 15.5 (Ubuntu 15.5-0ubuntu0.23.10.1)
-- Dumped by pg_dump version 15.5 (Ubuntu 15.5-0ubuntu0.23.10.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO ego;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO ego;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO ego;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO ego;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO ego;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO ego;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: code_project_codigo; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.code_project_codigo (
    id bigint NOT NULL,
    pasos character varying(200) NOT NULL,
    codigo text,
    fotos character varying(100),
    proyecto_id bigint NOT NULL,
    indice integer
);


ALTER TABLE public.code_project_codigo OWNER TO ego;

--
-- Name: code_project_codigo_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.code_project_codigo ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.code_project_codigo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: code_project_proyecto; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.code_project_proyecto (
    id bigint NOT NULL,
    nombre character varying(200),
    descripcion text NOT NULL,
    status character varying(50) NOT NULL,
    tipo_contenido character varying(10) NOT NULL,
    url character varying(200),
    fecha_modificado timestamp with time zone
);


ALTER TABLE public.code_project_proyecto OWNER TO ego;

--
-- Name: code_project_proyecto_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.code_project_proyecto ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.code_project_proyecto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: cookie_consent_cookie; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.cookie_consent_cookie (
    id integer NOT NULL,
    name character varying(250) NOT NULL,
    description text NOT NULL,
    path text NOT NULL,
    domain character varying(250) NOT NULL,
    created timestamp with time zone NOT NULL,
    cookiegroup_id integer NOT NULL
);


ALTER TABLE public.cookie_consent_cookie OWNER TO ego;

--
-- Name: cookie_consent_cookie_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.cookie_consent_cookie ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.cookie_consent_cookie_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: cookie_consent_cookiegroup; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.cookie_consent_cookiegroup (
    id integer NOT NULL,
    varname character varying(32) NOT NULL,
    name character varying(100) NOT NULL,
    description text NOT NULL,
    is_required boolean NOT NULL,
    is_deletable boolean NOT NULL,
    ordering integer NOT NULL,
    created timestamp with time zone NOT NULL
);


ALTER TABLE public.cookie_consent_cookiegroup OWNER TO ego;

--
-- Name: cookie_consent_cookiegroup_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.cookie_consent_cookiegroup ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.cookie_consent_cookiegroup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: cookie_consent_logitem; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.cookie_consent_logitem (
    id integer NOT NULL,
    action integer NOT NULL,
    version character varying(32) NOT NULL,
    created timestamp with time zone NOT NULL,
    cookiegroup_id integer NOT NULL
);


ALTER TABLE public.cookie_consent_logitem OWNER TO ego;

--
-- Name: cookie_consent_logitem_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.cookie_consent_logitem ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.cookie_consent_logitem_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_pdf; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.core_pdf (
    id bigint NOT NULL,
    file character varying(100) NOT NULL,
    name character varying(200)
);


ALTER TABLE public.core_pdf OWNER TO ego;

--
-- Name: core_pdf_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.core_pdf ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_pdf_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_secciones; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.core_secciones (
    id bigint NOT NULL,
    seccion character varying(50) NOT NULL,
    texto text NOT NULL,
    imagen character varying(100),
    created timestamp with time zone NOT NULL,
    updated timestamp with time zone NOT NULL,
    categoria character varying(10) NOT NULL
);


ALTER TABLE public.core_secciones OWNER TO ego;

--
-- Name: core_secciones_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.core_secciones ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_secciones_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: cursos_curso; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.cursos_curso (
    id bigint NOT NULL,
    nombre character varying(100) NOT NULL,
    empresa character varying(100) NOT NULL,
    identificador character varying(50) NOT NULL,
    url character varying(200) NOT NULL,
    archivo character varying(100) NOT NULL,
    descripcion text NOT NULL,
    horas integer NOT NULL,
    fecha_modificado timestamp with time zone,
    CONSTRAINT cursos_curso_horas_check CHECK ((horas >= 0))
);


ALTER TABLE public.cursos_curso OWNER TO ego;

--
-- Name: cursos_curso_habilidades; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.cursos_curso_habilidades (
    id bigint NOT NULL,
    curso_id bigint NOT NULL,
    habilidad_id bigint NOT NULL
);


ALTER TABLE public.cursos_curso_habilidades OWNER TO ego;

--
-- Name: cursos_curso_habilidades_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.cursos_curso_habilidades ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.cursos_curso_habilidades_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: cursos_curso_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.cursos_curso ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.cursos_curso_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: cursos_habilidad; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.cursos_habilidad (
    id bigint NOT NULL,
    nombre character varying(50) NOT NULL
);


ALTER TABLE public.cursos_habilidad OWNER TO ego;

--
-- Name: cursos_habilidad_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.cursos_habilidad ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.cursos_habilidad_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO ego;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO ego;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO ego;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO ego;

--
-- Name: django_site; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.django_site (
    id integer NOT NULL,
    domain character varying(100) NOT NULL,
    name character varying(50) NOT NULL
);


ALTER TABLE public.django_site OWNER TO ego;

--
-- Name: django_site_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.django_site ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_site_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: recomendaciones_recomendacion; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.recomendaciones_recomendacion (
    id bigint NOT NULL,
    categoria character varying(255) NOT NULL,
    titulo character varying(255) NOT NULL,
    paginas integer,
    autor character varying(255) NOT NULL,
    link character varying(200),
    foto character varying(100),
    precio numeric(10,2) NOT NULL,
    caracteristicas text,
    descripcion text,
    fecha_modificado timestamp with time zone
);


ALTER TABLE public.recomendaciones_recomendacion OWNER TO ego;

--
-- Name: recomendaciones_recomendacion_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.recomendaciones_recomendacion ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.recomendaciones_recomendacion_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: taggit_tag; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.taggit_tag (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    slug character varying(100) NOT NULL
);


ALTER TABLE public.taggit_tag OWNER TO ego;

--
-- Name: taggit_tag_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.taggit_tag ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.taggit_tag_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: taggit_taggeditem; Type: TABLE; Schema: public; Owner: ego
--

CREATE TABLE public.taggit_taggeditem (
    id integer NOT NULL,
    object_id integer NOT NULL,
    content_type_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE public.taggit_taggeditem OWNER TO ego;

--
-- Name: taggit_taggeditem_id_seq; Type: SEQUENCE; Schema: public; Owner: ego
--

ALTER TABLE public.taggit_taggeditem ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.taggit_taggeditem_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add secciones	7	add_secciones
26	Can change secciones	7	change_secciones
27	Can delete secciones	7	delete_secciones
28	Can view secciones	7	view_secciones
29	Can add habilidad	8	add_habilidad
30	Can change habilidad	8	change_habilidad
31	Can delete habilidad	8	delete_habilidad
32	Can view habilidad	8	view_habilidad
33	Can add curso	9	add_curso
34	Can change curso	9	change_curso
35	Can delete curso	9	delete_curso
36	Can view curso	9	view_curso
37	Can add proyecto	10	add_proyecto
38	Can change proyecto	10	change_proyecto
39	Can delete proyecto	10	delete_proyecto
40	Can view proyecto	10	view_proyecto
41	Can add codigo	11	add_codigo
42	Can change codigo	11	change_codigo
43	Can delete codigo	11	delete_codigo
44	Can view codigo	11	view_codigo
45	Can add recomendacion	12	add_recomendacion
46	Can change recomendacion	12	change_recomendacion
47	Can delete recomendacion	12	delete_recomendacion
48	Can view recomendacion	12	view_recomendacion
49	Can add Cookie	13	add_cookie
50	Can change Cookie	13	change_cookie
51	Can delete Cookie	13	delete_cookie
52	Can view Cookie	13	view_cookie
53	Can add Cookie Group	14	add_cookiegroup
54	Can change Cookie Group	14	change_cookiegroup
55	Can delete Cookie Group	14	delete_cookiegroup
56	Can view Cookie Group	14	view_cookiegroup
57	Can add Log item	15	add_logitem
58	Can change Log item	15	change_logitem
59	Can delete Log item	15	delete_logitem
60	Can view Log item	15	view_logitem
61	Can add tag	16	add_tag
62	Can change tag	16	change_tag
63	Can delete tag	16	delete_tag
64	Can view tag	16	view_tag
65	Can add tagged item	17	add_taggeditem
66	Can change tagged item	17	change_taggeditem
67	Can delete tagged item	17	delete_taggeditem
68	Can view tagged item	17	view_taggeditem
69	Can add site	18	add_site
70	Can change site	18	change_site
71	Can delete site	18	delete_site
72	Can view site	18	view_site
73	Can add pdf	19	add_pdf
74	Can change pdf	19	change_pdf
75	Can delete pdf	19	delete_pdf
76	Can view pdf	19	view_pdf
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
1	pbkdf2_sha256$600000$fNeVATmS1m2191lnMrv5B9$ovrEGRc2pjDEPgbN1nhAUdwRyopXQ0koz8YLnal59Q8=	2024-01-02 22:36:26.346873+00	t	egoitz				t	t	2023-12-20 22:10:56.838767+00
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: code_project_codigo; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.code_project_codigo (id, pasos, codigo, fotos, proyecto_id, indice) FROM stdin;
5	Descargar el pdf y guardarlo, la variable url está mal invocada abajo.	#!usr/bin python3\r\nimport pdb\r\nimport requests\r\nimport pandas as pd\r\n\r\nimport csv\r\nimport tabula\r\nimport re\r\n\r\nfrom datetime import date, datetime\r\n\r\n"""Rentability and cost of the electro scooter delivery. The consumption cost\r\necuation is consumption = capacity x volt, divided under 1 millon to convert to\r\nKW, convert to KWh and multiplicate per load cost. After give delivery orders and\r\nmultiplicate for the price of each order on the day. All saved two times, one in\r\ncompany pdf, other one saving price in month, and the benefits in other file,\r\nworking in csv and pdf like exercise."""\r\n\r\ndef download_get_pdf():#make a request and get the pdf\r\n    download = requests.get(url)\r\n    return download\r\n#save the pdf and return the name to read later\r\ndef test_download_get_pdf():\r\n    expected = 200\r\n    actual = download_get_pdf()\r\n    assert expected == actual.status_code\r\n\r\ndef save_pdf(pdf):\r\n    with pdf as r:\r\n        with open("electricity.pdf", "wb") as f:\r\n            f.write(r.content)\r\n    return f.name		3	1
6	Conseguir los precios, formatearlos y guardarlos.	def get_tariff_price(file):\r\n    table = tabula.read_pdf(file, pages="all")\r\n    df = pd.DataFrame(table[1]) #using panda extract first table\r\n    actual_price = (df['Unnamed: 1'].loc[43]) #extract only my tariff_price\r\n    return actual_price\r\n#format the price for better handling\r\ndef format_tariff_price(actual_price):\r\n    format_price = re.sub('[() ]', '', actual_price).replace(',', '.')\r\n    tariff_price = float(format_price)\r\n    return tariff_price\r\n#test the format function\r\ndef test_format_tariff_price():\r\n    expected = 100.1\r\n    actual = format_tariff_price('(1 0 0,1)')\r\n    assert expected == actual\r\n#save the tariff_price in one csvfile to work later\r\ndef save_prices(price):\r\n    currentMonth = datetime.now().strftime("%B") #get month\r\n    current_prices = (currentMonth, price) # make tuple with month and price\r\n    with open ('electricity_prices.csv', "a", newline = '') as csvfile:\r\n        writer = csv.writer(csvfile)\r\n        writer.writerow(current_prices)		3	2
7	Calcular los costos y los beneficios.	#function who calculate the load cost and return the price\r\ndef get_today_price():\r\n    with open('electricity_prices.csv', "r") as file:\r\n        data = file.readlines()[-1]#get only the last input\r\n        datos = data.split(',')[-1]#get only the price\r\n    return datos\r\n#make operations to calculate the load cost\r\ndef get_load_cost(datos):\r\n    electricity_price = float(datos) / 1000 #format the price\r\n    load_cost = electricity_price * load_capacity * load_time\r\n    return load_cost\r\n#save the cost of load and return in a string formated\r\ndef save_cost_of_load(load_cost):\r\n    with open("benefit.csv", "w+", encoding='UTF8') as f:\r\n        writer = csv.writer(f, delimiter=' ')\r\n        writer.writerow("The load cost is:{}".format(str(load_cost)))\r\n        return ("The load cost is: {}".format(str(load_cost)))\r\n#function who calculate the total profits of the day\r\ndef profit(load_cost, profit):\r\n    benefit = profit - load_cost # sustract the cost and return benefit\r\n    return benefit		3	3
8	Desde Main.py coordinar las funciones y recibir los inputs de los precios pagados por los pedidos.	#!usr/bin/python3\r\nimport argparse\r\nfrom cost_and_benefit import viabilidad_reparto as v\r\nfrom datetime import date\r\n\r\n\r\n\r\ndef main():\r\n    if date.today().day == 1: #call only first of month to update growing prices\r\n        file = v.download_get_pdf()\r\n        pdf = v.save_pdf(file)\r\n        get_tariff = v.get_tariff_price(pdf)\r\n        formated = v.format_tariff_price(get_tariff)\r\n        save_price = v.save_prices(formated)\r\n        today_price = v.get_today_price()\r\n        load_cost = v.get_load_cost(today_price)\r\n        print(load_cost)\r\n    elif date.today().day != 1:\r\n        today_price = v.get_today_price()\r\n        load_cost = v.get_load_cost(today_price)\r\n        print(load_cost)\r\n\r\nif __name__=="__main__":\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument("orders", nargs='?', help="The number of today orders", type=int)\r\n    parser.add_argument("payment", nargs='?', help="The week paymet of the orders", type=int)\r\n    args = parser.parse_args()\r\n    if args.orders and args.payment:\r\n        answer = args.orders * args.payment\r\n        today_price =v.get_today_price()\r\n        load_cost = v.get_load_cost(today_price)\r\n        benefit = v.profit(load_cost, answer)\r\n        print(benefit)\r\n    else:\r\n        main()		3	4
9	Hacer la sopa y una lista con las primeras urls.	#!/usr/bin/python3\r\nfrom bs4 import BeautifulSoup\r\nimport requests\r\nimport time\r\nimport asyncio\r\nfrom aiohttp import ClientSession\r\n\r\n""" Exercise to implement syncronus, asyncronus and pararell scrapping. I am\r\nreusing my first bot done months ago, so the data and methods are a little bit\r\nrudimentary and without so much knowledge of python. """\r\n\r\nmain_url = 'https://sueldode.org/'\r\nlinks_partidos = []\r\nnew_url = []\r\nreferencias = []\r\npartidos_url = []\r\nreferidos = []\r\n\r\ndef llamar_url(url):\r\n    """ Function to get the url and return a soup objects """\r\n    html = requests.get(url).text\r\n    soup = BeautifulSoup(html, features ='lxml')\r\n    return soup\r\n\r\ndef get_party_links():\r\n    """ Function to get the links of the political parties appending to list """\r\n    soup = llamar_url(main_url)\r\n    link_parties = soup.find_all('a', class_="no-lightbox")\r\n    for i in link_parties:\r\n        link = i.get('href')\r\n        links_partidos.append(link)\r\n\r\ndef make_urls():\r\n    """ Refine the links of the urls and append to list """\r\n    for i in links_partidos:\r\n        acotar_link = i.strip()\r\n        añadir_url = (f"{main_url}{acotar_link[1:]}")\r\n        new_url.append(añadir_url)		4	1
10	Seguir formando las urls capturando las excepciones mal formateadas y calcular los sueldos.	def get_politburo():\r\n    """ Get the links to each politic of spain, but I don't remember really in\r\n    what position. """\r\n    for url in new_url:\r\n        sopa = llamar_url(url)\r\n        nombre_personas = sopa.find_all('li')\r\n        for nombre in nombre_personas:\r\n            try:\r\n                referencia = nombre.find('a', href=True)\r\n                referencias.append(referencia['href'])\r\n            except:\r\n                continue\r\n\r\ndef main(url):\r\n    """ Get the anual salary of each politic """\r\n    soup = BeautifulSoup(url, 'lxml')\r\n    nombre_vasallo = soup.find('article', {'id':True}).h1.string\r\n    puesto_vasallo = soup.find('div', {'class' : 'entry-content'}).h2.text\r\n    salario_vasallo = soup.find('strong').find_parent().text\r\n    anual_vasallo = soup.find('strong').find_parent().find_next_sibling().text\r\n    referidos.append(f"El vasallo cobra:\\n {salario_vasallo} actuando como {puesto_vasallo}")\r\n    referidos.append(f"Anualmente\\n {anual_vasallo}.")		4	2
11	Crear las listas de requests asíncronos.	def fetch_async(urls):\r\n    """ Function who coordinates the coroutines """\r\n    loop = asyncio.get_event_loop()\r\n    future = asyncio.ensure_future(fetch_all(urls))\r\n    loop.run_until_complete(future)\r\n\r\nasync def fetch_all(urls):\r\n    """ Function who make task pool """\r\n    tasks = []\r\n    async with ClientSession() as session:\r\n        for url in urls:\r\n            task = asyncio.ensure_future(fetch(url, session))\r\n            tasks.append(task)\r\n        _ = await asyncio.gather(*tasks)\r\n\r\nasync def fetch(url, session):\r\n    """ Function to return response object from url to fill the tasks """\r\n    async with session.get(url) as response:\r\n        r = await response.text()\r\n        return main(r)		4	3
12	Darle cera al servidor y contar el tiempo gastado.	if __name__=='__main__':\r\n    """ Print each formated politician with aiohttp and asyncio and printing the\r\n    spent time to compare """\r\n    s = time.perf_counter()\r\n    get_party_links()\r\n    make_urls()\r\n    get_politburo()\r\n    fetch_async(referencias)\r\n    elapsed = time.perf_counter() - s\r\n    print(f"{__file__} executed in {elapsed:0.2f} seconds.")\r\n#30 seconds more or less		4	4
13	Pasos 1 y 2 iguales, creando un Pool de cables para terminar antes.	if __name__=='__main__':\r\n    """ Print each formated politician with ThreadPoolExecutor and printing the\r\n    spent time to compare"""\r\n    s = time.perf_counter()\r\n    get_party_links()\r\n    make_urls()\r\n    get_politburo()\r\n    with ThreadPoolExecutor() as executor:\r\n        vasallos = executor.map(main, referencias)\r\n    elapsed = time.perf_counter() - s\r\n    print(f"{__file__} executed in {elapsed:0.2f} seconds.")\r\n#220 seconds more or less		4	5
14	Pasos 1 y 2 iguales, terminando de manera normal.	if __name__=='__main__':\r\n    """ Print each formated politician syncronus and printing the\r\n    spent time to compare """\r\n    s = time.perf_counter()\r\n    get_party_links()\r\n    make_urls()\r\n    get_politburo()\r\n    for ref in referencias:\r\n        main(ref)\r\n    elapsed = time.perf_counter() - s\r\n    print(f"{__file__} executed in {elapsed:0.2f} seconds.")\r\n#710 secondes more or less		4	6
15	Crear el bot, abrir la web, maximizar y clickar las cookies.	from selenium import webdriver\r\nfrom selenium.webdriver.firefox.service import Service\r\nfrom selenium.webdriver.common.by import By\r\nfrom selenium.webdriver.common.keys import Keys\r\nfrom src import constants as cons\r\nimport time\r\n\r\n""" I try to make one bot who make Facebook publications from one list of sentences. I can't make also images posts \r\nbecause selenium don't allow to drag and drop from different websites and is only one exercise for fun. I will leave\r\ntheir arguments for the future. Some functions could only work in Spanish Facebook."""\r\n\r\nclass Post:\r\n    def __init__(self, seleniun_driver="/home/raskolnikov/seleniumdriver/geckodriver", imagen=None):\r\n        self.seleniumdriver = seleniun_driver\r\n        self.service = Service(self.seleniumdriver)\r\n        self.driver = webdriver.Firefox(service=self.service)\r\n        self.imagen = imagen\r\n\r\n    def open_web(self):\r\n        """ Open the web and maximize the window. """\r\n        self.driver.implicitly_wait(5)\r\n        self.driver.get(cons.BASE_URL)\r\n        self.driver.maximize_window()\r\n\r\n    def click_cookies(self):\r\n        """ Find and delete the cookies, I think that could achieve with Delete_cookies but is done."""\r\n        essential_cookies = self.driver.find_element(By.CSS_SELECTOR,\r\n                                                     "button[data-testid=cookie-policy-manage-dialog-accept-button]")\r\n        essential_cookies.click()\r\n        time.sleep(1)		5	1
16	Hacer el login y pinchar en el perfil para que la propaganda no detenga el bot.	def login_mail(self):\r\n        """ Automate the writing of login email."""\r\n        log_email = self.driver.find_element(By.ID, "email")\r\n        log_email.send_keys("colmillovasco@protonmail.com")\r\n        time.sleep(1)\r\n\r\n    def login_password(self):\r\n        """ Automate the writing of login_password."""\r\n        password = self.driver.find_element(By.ID, "pass")\r\n        password.send_keys("Jh927Gui4YjVG3T")\r\n        time.sleep(1)\r\n\r\n    def make_login(self):\r\n        """ Click on login button and finish this step."""\r\n        login = self.driver.find_element(By.NAME, "login")\r\n        login.click()\r\n        time.sleep(1)\r\n\r\n    def profile_main(self):\r\n        """ Click in the profile main page to begin always in the same place."""\r\n        main_page = self.driver.find_element(By.CSS_SELECTOR, "a[aria-label='Inicio']")\r\n        main_page.click()\r\n        time.sleep(1)		5	2
17	Escribir la publicación, elegir las opciones y crear el post.	def publication_box(self):\r\n        """ Go to publication box and click to start posting."""\r\n        boton_publicar = self.driver.find_element(By.XPATH, "//span[text()= '¿Qué estás pensando, Juan?']")\r\n        boton_publicar.click()\r\n        time.sleep(1)\r\n\r\n    def set_post_privacity(self):\r\n        """ Check and make that the post is for all people, by default is in private the first time."""\r\n        boton_publico = self.driver.find_element(By.XPATH, "//span[text()= 'Público']")\r\n        boton_publico.click()\r\n        time.sleep(1)\r\n        boton_comenzar = self.driver.find_element(By.XPATH, "//span[text()= 'Listo']")\r\n        boton_comenzar.click()\r\n        time.sleep(1)\r\n\r\n    def write_post(self):\r\n        """ Write the post from the list of posts with for loop, otherwise not allowed."""\r\n        escribir = self.driver.find_element(By.CSS_SELECTOR, "div[role='textbox']")\r\n        mensaje = cons.MENSAJES[0]\r\n        for letter in mensaje:\r\n            escribir.send_keys(letter)\r\n\r\n    def make_post(self):\r\n        """ Click on the botton to publish the post."""\r\n        postear = self.driver.find_element(By.CSS_SELECTOR, "div[aria-label='Publicar']")\r\n        postear.click()		5	3
18	Diferentes opciones para las imágenes, hay que desarrollar si usar una imagen propia o buscarla con palabras clave, aquí lo dejé.	def post_image(self):\r\n        """ Click on the button to upload image."""\r\n        post_image = self.driver.find_element(By.CSS_SELECTOR, "div[aria-label='Foto/vídeo']")\r\n        post_image.click()\r\n\r\n    def abrir_ventana(self):\r\n        """ Open new window with google browser."""\r\n        nueva_ventana = self.driver.get(cons.SEARCH_ENGINE)\r\n        time.sleep(1)\r\n\r\n    def clicar_cookie(self):\r\n        """ Click the cookies, if appear."""\r\n        try:\r\n            cookie = self.driver.find_element(By.CSS_SELECTOR,\r\n                                                     "button[id=W0wltc]")\r\n            time.sleep(1)\r\n            cookie.click()\r\n        except:\r\n            pass\r\n\r\n    def find_image(self):\r\n        """ Find image."""\r\n        busqueda = self.driver.find_element(By.NAME, "q")\r\n        busqueda.send_keys(self.imagen, Keys.ENTER)\r\n        time.sleep(1)\r\n\r\n    def show_images(self):\r\n        """ Click on the image."""\r\n        image = self.driver.find_element(By.XPATH, "/html/body/div[7]/div/div[4]/div/div[1]/div/div[1]/div/div[2]")\r\n        image.click()\r\n\r\n    def select_image(self):\r\n        """ Select the first image on browser."""\r\n        click_imagen = self.driver.find_element(By.CSS_SELECTOR, "div.isv-r")\r\n        click_imagen.click()\r\n        time.sleep(2)\r\n\r\n    def nueva_ventana(self):\r\n        """ Open new window."""\r\n        self.driver.execute_script("window.open('');")\r\n        self.driver._switch_to.window(self.driver.window_handles[1])\r\n        self.abrir_ventana()		5	4
19	Coordinación de los pasos.	def login_steps(self):\r\n        """ Login steps all in one."""\r\n        self.open_web()\r\n        self.click_cookies()\r\n        self.login_mail()\r\n        self.login_password()\r\n        self.make_login()\r\n\r\n    def post_publication_steps(self):\r\n        """ The all steps of making a post publication"""\r\n        self.profile_main()\r\n        self.publication_box()\r\n        self.set_post_privacity()\r\n        self.write_post()\r\n        self.make_post()		5	5
20	El main.py que lo lanza.	#!/usr/bin/python3\r\nfrom src.post import Post\r\n\r\n\r\nif __name__='__main__':\r\n    bot = Post()\r\n    bot.login_steps()\r\n    bot.post_publication_steps()		5	6
21	Importar las bibliotecas y recibir inputs desde la terminal.	#!/usr/bin/python3\r\nimport os\r\nimport requests\r\nimport re\r\nimport pandas as pd\r\nimport gzip\r\nimport asyncio\r\nimport time\r\nimport numpy as np\r\nimport argparse\r\n\r\nfrom bs4 import BeautifulSoup\r\nfrom io import BytesIO\r\nfrom aiohttp import ClientSession, TCPConnector, ClientTimeout\r\nfrom mexico import parse_excel\r\n\r\n""" Bot who gets the booking hotels from Mexico formating their outputs for\r\nEnglish characters. """\r\n\r\nparser = argparse.ArgumentParser(description='Country letter code to start')\r\nparser.add_argument('country', help='country code to the regex')\r\nargs = parser.parse_args()		6	1
22	Diferentes listas del sitemap, arreglos vacíos, parámetros para las expresiones regulares y para los headers del request.	""" Api Urls and empty lists for data """\r\napartah = ["https://www.booking.com/sitembk-themed-city-gostinicy-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-guest_house-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-hanting_express-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-hilton-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-holidayhomes-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-holidayinn-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-holidaypark-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-home_inn-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-home_stay-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-hostels-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-ibis-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-inn-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-jacuzzi-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-lodge-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-love_hotel-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-luxury-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-marriott-index.xml",\r\n"https://www.booking.com/sitembk-themed-city-mercure-index.xml"]\r\n\r\napartahotels_list, reviews, links, themes, descriptions, titles, locations, hotels_scrap, final_links, formated_links = [], [], [], [], [], [], [], [], [], []\r\nargentina = re.compile(rf"/{args.country}/")\r\nargentina_sitemap = re.compile(rf"-{args.country}")\r\nparams = {\r\n    'lang': 'en-gb',\r\n    'sb_price_type': 'total',\r\n    'type': 'total',\r\n    'lang_click': 'other',\r\n    'lang_changed': '1',\r\n}		6	2
23	Automatizar la sopa y el extractor de selectores, extrayendo los datos válidos de los hoteles.	def get_soup(url):\r\n    """ Get the soup object for urls """\r\n    r = requests.get(url)\r\n    soup = BeautifulSoup(r.text, 'lxml')\r\n    return soup\r\n\r\ndef get_hotel_data(hotel_lists):\r\n    """ Get hotels links and append to lists """\r\n    response = requests.Session().get(url=hotel_lists, params=params).text\r\n    soup = BeautifulSoup(response, 'lxml')\r\n    try:\r\n        link_find = soup.find_all('header', {'class': 'bui-spacer--medium'})\r\n        for ad_link in link_find:\r\n            ad_link = ad_link.a['href']\r\n            if ad_link.startswith('/hotel') and not None:\r\n                f_link = "https://www.booking.com" + ad_link\r\n                formated_links.append(f_link)\r\n            else:\r\n                continue\r\n    except:\r\n        pass\r\n\r\ndef extract_selectors(soup, selector):\r\n    """ Avoid NoneType object don't have attribute failure """\r\n    try:\r\n        return soup.find(selector)\r\n    except:\r\n        return None\r\n\r\ndef get_each_hotel_data(link, url):\r\n    """ Get hotels data and append to lists """\r\n    soup = BeautifulSoup(link, 'lxml')\r\n    try:\r\n        description = soup.find(id="property_description_content").text\r\n        title = soup.find(id="hp_hotel_name").h2.text\r\n        theme = soup.find(id="hp_hotel_name").div.text\r\n        description = re.sub(r"You're eligible for a Genius discount.*all you have to do is sign in.", '', description)\r\n        if (description and title and theme and url) != None:\r\n            if 'ñ' not in description:\r\n                descriptions.append(description)\r\n            else:\r\n                descriptions.append(np.nan)\r\n            if 'ñ' not in title:\r\n                titles.append(title)\r\n            else:\r\n                titles.append(np.nan)\r\n            if 'ñ' not in theme:\r\n                themes.append(theme)\r\n            else:\r\n                themes.append(np.nan)\r\n            final_links.append(url)\r\n        else:\r\n            pass\r\n    except:\r\n        pass		6	4
24	Creación del dataframe y paso al excel.	def get_soup(url):\r\n    """ Get the soup object for urls """\r\n    r = requests.get(url)\r\n    soup = BeautifulSoup(r.text, 'lxml')\r\n    return soup\r\n\r\ndef get_hotel_data(hotel_lists):\r\n    """ Get hotels links and append to lists """\r\n    response = requests.Session().get(url=hotel_lists, params=params).text\r\n    soup = BeautifulSoup(response, 'lxml')\r\n    try:\r\n        link_find = soup.find_all('header', {'class': 'bui-spacer--medium'})\r\n        for ad_link in link_find:\r\n            ad_link = ad_link.a['href']\r\n            if ad_link.startswith('/hotel') and not None:\r\n                f_link = "https://www.booking.com" + ad_link\r\n                formated_links.append(f_link)\r\n            else:\r\n                continue\r\n    except:\r\n        pass\r\n\r\ndef extract_selectors(soup, selector):\r\n    """ Avoid NoneType object don't have attribute failure """\r\n    try:\r\n        return soup.find(selector)\r\n    except:\r\n        return None\r\n\r\ndef get_each_hotel_data(link, url):\r\n    """ Get hotels data and append to lists """\r\n    soup = BeautifulSoup(link, 'lxml')\r\n    try:\r\n        description = soup.find(id="property_description_content").text\r\n        title = soup.find(id="hp_hotel_name").h2.text\r\n        theme = soup.find(id="hp_hotel_name").div.text\r\n        description = re.sub(r"You're eligible for a Genius discount.*all you have to do is sign in.", '', description)\r\n        if (description and title and theme and url) != None:\r\n            if 'ñ' not in description:\r\n                descriptions.append(description)\r\n            else:\r\n                descriptions.append(np.nan)\r\n            if 'ñ' not in title:\r\n                titles.append(title)\r\n            else:\r\n                titles.append(np.nan)\r\n            if 'ñ' not in theme:\r\n                themes.append(theme)\r\n            else:\r\n                themes.append(np.nan)\r\n            final_links.append(url)\r\n        else:\r\n            pass\r\n    except:\r\n        pass		6	6
25	Descomprimir el sitemap y obtener los links de los hoteles.	def get_links(xml):\r\n    """ Get the links from the page """\r\n    format_links = []\r\n    soup = BeautifulSoup(xml, features='xml')\r\n    links = soup.find_all('loc')\r\n    for link in links:\r\n        if argentina.findall(str(link)):\r\n            link = link.text\r\n            format_links.append(link)\r\n        else:\r\n            continue\r\n    return format_links\r\n\r\ndef get_sitemap(site_url):\r\n    """ Get sitemap to obtain later the links. """\r\n    resp = requests.get(site_url)\r\n    return resp.content\r\n\r\ndef descompress_sitemap(site_response):\r\n    """ Get a byte object and decompress to read the links """\r\n    with BytesIO(site_response) as file:\r\n        with gzip.open(file, 'rb') as f:\r\n            file_data = f.read()\r\n            return file_data		6	3
26	La estructura para el scraping asíncrono.	def fetch_async_1(urls):\r\n    """ Function who coordinates the coroutines for data """\r\n    loop = asyncio.get_event_loop()\r\n    future = asyncio.ensure_future(fetch_all_1(urls))\r\n    loop.run_until_complete(future)\r\n\r\nasync def fetch_all_1(urls):\r\n    """ Function who make task pool """\r\n    tasks = []\r\n    connector = TCPConnector(force_close=True, limit_per_host=10)\r\n    async with ClientSession(connector=connector) as session:\r\n        for url in urls:\r\n            task = asyncio.ensure_future(fetch_1(url, session))\r\n            tasks.append(task)\r\n        _ = await asyncio.gather(*tasks)\r\n\r\nasync def fetch_1(url, session):\r\n    """ Function to return response object from url to fill the tasks """\r\n    if url != None:\r\n        try:\r\n            async with session.get(url=url, params=params) as response:\r\n                r = await response.text()\r\n                return get_each_hotel_data(r, url)\r\n        except:\r\n            pass		6	7
27	Limpiar los resultados para el alfabeto inglés.	def parse_results():\r\n    """ Get only english characters """\r\n    df_1 = pd.read_excel("mexico_first_step.xlsx")\r\n    df = pd.read_excel('mexico_first_step.xlsx')\r\n    df1 = df.drop_duplicates(keep='first')\r\n    df2 = df1.dropna()\r\n    df3 = df2[df2["Description"].str.contains("á|é|í|ó|ú|ñ|ü", case=False) == False]\r\n    df4 = df3[df3["Listing_url"].str.contains("á|é|í|ó|ú|ñ|ü", case=False) == False]\r\n    df5  = df4[df4["Themes"].str.contains("á|é|í|ó|ú|ñ|ü", case=False) == False]\r\n    df6 = df5[df5["Title"].str.contains("á|é|í|ó|ú|ñ|ü", case=False) == False]\r\n    new_df = pd.concat([df6, df_1], axis=0)\r\n    new_df1 = new_df.drop_duplicates(keep='first').dropna()\r\n    new_df1.to_excel('mexico_first_step.xlsx')		6	5
28	La función principal que coordina todo, habría que refactorizarla en base al Don't Repeat Yourself pero no he vuelto a necesitarla.	def themed_country(site_list):\r\n    """ Main function """\r\n    apartahotel = get_soup(str(site_list)).loc\r\n    for regions in apartahotel:\r\n        sitemap_response = get_sitemap(regions)\r\n        final_regions = descompress_sitemap(sitemap_response)\r\n        links_to_regions = get_links(final_regions)\r\n        if links_to_regions:\r\n            for first in links_to_regions:\r\n                get_hotel_data(first)\r\n                time.sleep(8) \r\n        format_1 = formated_links[:int(len(formated_links)/5)]\r\n        number = len(format_1)\r\n        format_2 = formated_links[int(number):(int(number*2))]\r\n        format_3 = formated_links[int(len(format_1*2)):int(len(format_1*3))]\r\n        format_4 = formated_links[int(len(format_1*3)):int(len(format_1*4))]\r\n        format_5 = formated_links[int(len(format_1*4)):]\r\n        fetch_async_1(format_2)\r\n        df = make_df()\r\n        df_droped = df.drop_duplicates().dropna()\r\n        make_excel(df_droped)\r\n        print("first_part_done")\r\n        time.sleep(15)\r\n        fetch_async_1(format_3)\r\n        df = make_df()\r\n        df_droped = df.drop_duplicates().dropna()\r\n        make_excel(df_droped)\r\n        print("second_part_done")\r\n        time.sleep(16)\r\n        fetch_async_1(format_4)\r\n        df = make_df()\r\n        df_droped = df.drop_duplicates().dropna()\r\n        make_excel(df_droped)\r\n        print("third_part_done")\r\n        time.sleep(18)\r\n        fetch_async_1(format_5)\r\n        df = make_df()\r\n        df_droped = df.drop_duplicates().dropna()\r\n        make_excel(df_droped)\r\n        print("fourth_part_done")\r\n        time.sleep(14)\r\n        fetch_async_1(format_1)\r\n        df = make_df()\r\n        df_droped = df.drop_duplicates().dropna()\r\n        make_excel(df_droped)\r\n        print("fifth_part_done")\r\n        time.sleep(20)		6	8
29	La llamada con espera de tiempo, para que el WebMaster no me banease.	if __name__=='__main__':\r\n    for i in apartah:\r\n        time.sleep(22)\r\n        print(i)\r\n        themed_country(i)\r\n    parse_results()		6	9
30	Este sería el primer bot, con las librerías importadas y la sopa automatizada.	#!/usr/bin/python3\r\n\r\nimport requests\r\nfrom bs4 import BeautifulSoup\r\n\r\n""" Script who get the prices of a wine shop and format in a list of tuples """\r\n\r\nURL = "https://www.covylsa.com/"\r\n\r\ndef get_soup(url):\r\n\t""" Function who make soup """\r\n\tresponse = requests.get(url).text\r\n\tsoup = BeautifulSoup(response, 'lxml')\r\n\treturn soup		7	1
31	La parte para obtener los links y los precios de los productos.	def get_pages_urls(soup):\r\n\t""" Get product categories main urls """\r\n\tproducts_main_urls = []\r\n\tbarra = soup.find('div', {'id': 'NavBarElementID2496403'})\r\n\tmenu_urls = barra.find_all('li')\r\n\tfor tag in menu_urls:\r\n\t\ttry:\r\n\t\t\tif tag['class'][1]:\r\n\t\t\t\turl = tag.find('a', href=True)\r\n\t\t\t\tresponse = requests.get("https://www.covylsa.com/epages/ea2537.sf/es_ES/" + str(url['href'])).text\r\n\t\t\t\tsecond_soup = BeautifulSoup(response, 'lxml')\r\n\t\t\t\tsecond_level_urls = second_soup.find('div', {'class': 'CategoryList'})\r\n\t\t\t\tseconds = second_level_urls.find_all('a', href=True)\r\n\t\t\t\tfor second in seconds:\r\n\t\t\t\t\tproducts_main_urls.append("https://www.covylsa.com/epages/ea2537.sf/es_ES/" + str(second['href']))\r\n\t\texcept:\r\n\t\t\turl = tag.find('a', href=True)\r\n\t\t\tproducts_main_urls.append("https://www.covylsa.com/epages/ea2537.sf/es_ES/" + str(url['href']))\r\n\treturn products_main_urls\r\n\r\ndef get_product_info(soup):\r\n\t""" Get product name and price """\r\n\tregistro = []\r\n\tproduct = soup.find_all('td')\r\n\tfor pro in product:\r\n\t\ttry:\r\n\t\t\tname = pro.find('h3').text.strip()\r\n\t\t\tprice = pro.find('span', {'class': 'price-value'}).span.text.strip()\r\n\t\t\ttry:\r\n\t\t\t\tidentificador = pro.a['href'].split('/')[-1]\r\n\t\t\texcept:\r\n\t\t\t\tidentificador = 'N/A'\r\n\t\t\tlugar = 'Covylsa'\r\n\t\t\ttry:\r\n\t\t\t\tif pro.find('div', {'class': 'Description'}):\r\n\t\t\t\t\tstock = pro.find('div', {'class': 'Description'}).text.strip()\r\n\t\t\t\telse:\r\n\t\t\t\t\tstock = 'N/A'\r\n\t\t\texcept:\r\n\t\t\t\tstock = 'N/A'\r\n\t\t\tregistro.append((identificador, name, price, stock, lugar))\r\n\t\texcept:\r\n\t\t\tpass\r\n\treturn registro		7	2
32	La función main parcial y el retorno de los datos correctamente formateados para el script que coordina todo.	def main():\r\n\t""" Main control function to get the list of tuples """\r\n\tproducts = []\r\n\tmain_soup = get_soup(URL)\r\n\tmain_urls = get_pages_urls(main_soup)\r\n\tfor url in main_urls:\r\n\t\tproducts_info = get_soup(url)\r\n\t\tproduct = get_product_info(products_info)\r\n\t\tproducts.append(product)\r\n\tproducts_list = [t for lst in products for t in lst]\r\n\treturn products_list\r\n\r\n\r\nif __name__=='__main__':\r\n\tmain()		7	3
33	Lo mismo en el segundo bot, bibliotecas y automatización de la sopa y los extractores. Eso más una breve explicación que demuestra que por aquella fecha no tenía ni idea de lo que era el https  :D	#!/usr/bin/python3\r\n\r\nimport requests\r\nimport re\r\n\r\nfrom bs4 import BeautifulSoup\r\n\r\n""" I need to disable the ssl certificate, in browser works but not with requests, urlib,\r\nrequest-html or xextract. I try downloading certifi, and other methods. Impossible, finally\r\nI leave because I am not going to send data and the domain is reliable """\r\n\r\nURL = "https://lukasgourmet.com/product-sitemap.xml"\r\nproduct_pattern = re.compile(r'product.+')\r\n\r\ndef get_soup(url):\r\n\t""" Function who make soup """\r\n\trequests.urllib3.disable_warnings()\r\n\tsession = requests.Session()\r\n\tresponse = session.get(url, verify=False).text\r\n\tsoup = BeautifulSoup(response, features='xml')\r\n\treturn soup\r\n\r\ndef extract_selectors(soup, selector):\r\n    """ Avoid NoneType object don't have attribute failure """\r\n    try:\r\n        return soup.find(selector)\r\n    except:\r\n        return 'N/A'		7	4
34	Conseguir los links y datos	def get_products_urls(soup):\r\n\t""" Function to get the wines urls """\r\n\twines_links = []\r\n\tvinoteca = re.compile(r"vinoteca")\r\n\tlinks = soup.find_all('loc')\r\n\tfor link in links:\r\n\t\tif re.search(vinoteca, link.text):\r\n\t\t\twines_links.append(link.text)\r\n\treturn wines_links\r\n\r\ndef get_products_info(soup):\r\n\t""" Function to get the product info """\r\n\ttry:\r\n\t\tnombre = extract_selectors(soup, ('h1', {'class': 'product_title entry-title'})).text\r\n\t\tprecio = extract_selectors(soup, ('bdi')).text\r\n\t\tif soup.find('p', {'class': re.compile('^stock.+')}):\r\n\t\t\tstock = soup.find('p', {'class': re.compile('^stock.+')}).text\r\n\t\telse:\r\n\t\t\tstock = 'N/A'\r\n\t\tlugar = 'Lukas'\r\n\t\tidentificador = soup.find('div', {'class': 'main'}).div.next_element.attrs['id']\r\n\t\treturn (identificador, nombre, precio, stock, lugar)\r\n\texcept:\r\n\t\tpass		7	5
35	Coordinarlo y devolverlo formateado.	def main():\r\n\t""" Main function to get the products info """\r\n\tproductos = []\r\n\tsoup = get_soup(URL)\r\n\twines_links = get_products_urls(soup)\r\n\tfor wine in wines_links:\r\n\t\tsoup = get_soup(wine)\r\n\t\tproduct = get_products_info(soup)\r\n\t\tproductos.append(product)\r\n\treturn productos\r\n\r\nif __name__=='__main__':\r\n\tmain()		7	6
36	Realizar el crud con sql y python.	#!/usr/bin/python3\r\n\r\nfrom mysql.connector import *\r\nfrom mysql.connector import Error\r\n\r\n""" Class to connect to DB and make the CRUD options. """\r\nclass DataConexion():\r\n\tdef __init__(self, host, port, user, password, db):\r\n\t\tself.host = host\r\n\t\tself.port = port\r\n\t\tself.user = user\r\n\t\tself.password = password\r\n\t\tself.db = db\r\n\t\ttry:\r\n\t\t\tself.conexion = connect(\r\n\t\t\t\thost = self.host,\r\n\t\t\t\tport = self.port,\r\n\t\t\t\tuser = self.user,\r\n\t\t\t\tpassword = self.password,\r\n\t\t\t\tdb = self.db)\r\n\t\t\tprint("Conexion realizada con éxito")\r\n\t\texcept Error as ec:\r\n\t\t\tprint(f"No se ha podido conectar, error {ec} ocurrido.")\r\n\r\n\tdef listaProductos(self):\r\n\t\t""" Method to connect, get and show the data from DB """ \r\n\t\tif self.conexion.is_connected():\r\n\t\t\ttry:\r\n\t\t\t\tproductos = self.conexion.cursor()\r\n\t\t\t\tproductos.execute("SELECT * FROM Vinos ORDER BY Identificador ASC")\r\n\t\t\t\tresultado = productos.fetchall()\r\n\t\t\t\treturn resultado\r\n\t\t\texcept Error as ec:\r\n\t\t\t\tprint(f"Se ha producido un error {ec}.")\r\n\r\n\tdef registrarProductos(self, referencias):\r\n\t\t""" Method to make the registration of new products """\r\n\t\tif self.conexion.is_connected():\r\n\t\t\ttry:\r\n\t\t\t\tproductos = self.conexion.cursor()\r\n\t\t\t\tsql = "INSERT INTO Vinos (Identificador, Nombre, Precio, Stock, Lugar) VALUES (%s, %s,%s,%s,%s)"\r\n\t\t\t\tresultado = productos.execute(sql, referencias)\r\n\t\t\t\tself.conexion.commit()\r\n\t\t\t\tprint("Productos registrados con éxito.")\r\n\t\t\texcept Error as ec:\r\n\t\t\t\tprint(f"Se ha producido el error {ec} al registrar los productos.")\r\n\r\n\tdef actualizarProductos(self, referencias):\r\n\t\t""" Method to make actualization of the products """\r\n\t\tif self.conexion.is_connected():\r\n\t\t\ttry:\r\n\t\t\t\tproductos = self.conexion.cursor()\r\n\t\t\t\tsql = "UPDATE `Vinos` SET Nombre=%s, Precio=%s, Stock=%s, Lugar=%s WHERE Identificador=%s;"\r\n\t\t\t\tproducto = productos.execute(sql, referencias)\r\n\t\t\t\tself.conexion.commit()\r\n\t\t\t\tprint("Productos actualizados con éxito.")\r\n\t\t\texcept Error as ec:\r\n\t\t\t\tprint(f"Se ha producido el error {ec} al actualizar los productos.")\r\n\r\n\tdef eliminarProducto(self, referencias_eliminar):\r\n\t\t""" Method to erase one product from DB """\r\n\t\tif self.conexion.is_connected():\r\n\t\t\ttry:\r\n\t\t\t\tproductos = self.conexion.cursor()\r\n\t\t\t\tsql = f"DELETE FROM Vinos WHERE Identificador={referencias_eliminar}"\r\n\t\t\t\tproductos.execute(sql)\r\n\t\t\t\tself.conexion.commit()\r\n\t\t\t\tprint("Producto eliminado con éxito.")\r\n\t\t\texcept Error as ec:\r\n\t\t\t\tprint(f"Se ha producido el error {ec} al eliminar los productos.")		7	7
37	Importar los bots y coordinarlos para que realicen el CRUD correctamente.	#!/usr/bin/python3\r\nfrom scrapers import covylsa_main\r\nfrom scrapers import lukas_main\r\n\r\ndef listar(productos):\r\n\t""" Function to show the products from DB """\r\n\tprint("Estos son los productos: \\n")\r\n\tfor pro in productos:\r\n\t\tprint(f"-Id: {pro[0]} -Nombre: {pro[1]}, -Precio: {pro[2]}€, -Opciones de stock: {pro[3]}, -Información adicional: {pro[4]}")\r\n\tprint("############################## \\n")\r\n\r\ndef datosProductos():\r\n\t""" Function to get the scrapped products price """\r\n\tdatos_productos_1 = covylsa_main.main()\r\n\tdatos_productos_2 = lukas_main.main()\r\n\tdatos_productos_2.extend(datos_productos_1)\r\n\treturn datos_productos_2\r\n\r\ndef datosProductosActualizar(productos):\r\n\t""" Function to actualize the products """\r\n\t#listar(productos)\r\n\tactualizar = input("¿Procedo a actualizar la base?(S/N): ")\r\n\tif actualizar.upper() == 'S':\r\n\t\tprint("Actualización en curso ahora")\r\n\t\tdatos_productos_1 = covylsa_main.main()\r\n\t\tdatos_productos_2 = lukas_main.main()\r\n\t\tdatos_productos_2.extend(datos_productos_1)\r\n\t\tprint("Actualización en curso")\r\n\t\treturn datos_productos_2\r\n\telse:\r\n\t\tprint("Actualización cancelada.")\r\n\t\tdatos_productos_2 = None\r\n\t\treturn datos_productos_2\r\n\r\ndef registroEliminar(productos):\r\n\t""" Function to delete the required product """\r\n\tlistar(productos)\r\n\texiste = False\r\n\tnombre_eliminar = int(input("Escribe el id de producto a eliminar:"))\r\n\tfor pro in productos:\r\n\t\tprint(f"{pro[0]}")\r\n\t\tif pro[0] == nombre_eliminar:\r\n\t\t\tprint("Dato encontrado para eliminar. \\n")\r\n\t\t\texiste = True\r\n\t\t\tbreak\r\n\tif not existe:\r\n\t\tnombre_eliminar = ''\r\n\treturn nombre_eliminar\r\n\r\nif __name__=='__main__':\r\n\tdatosProductosActualizar()		7	8
38	Coordinarlo todo con las opciones elegidas desde el terminal con argparser.	from vino_conexion import DataConexion\r\nimport vino_conexion \r\nimport vino_funciones\r\nimport argparse\r\n\r\n""" Function to coordinate all the options and functions with DB """\r\nparser = argparse.ArgumentParser(description='Give the database information.')\r\nparser.add_argument('hostname', help='the hostname of the database.')\r\nparser.add_argument('port', type=int, help='the port of the database.')\r\nparser.add_argument('db_username', help='the username of the database.')\r\nparser.add_argument('db_password', help='the database password.')\r\nparser.add_argument('db_name', help='the database name.')\r\n\r\nargs = parser.parse_args()\r\n\r\n\r\ndef menuPrincipal():\r\n    """ Main coordinate function """\r\n    conectar= DataConexion(args.hostname, args.port, args.db_username,\r\n                            args.db_password, args.db_name)\r\n    bandera=True\r\n    while bandera==True:\r\n        print("#### MENU PRINCIPAL#####")\r\n        print("1.-Listar Productos")\r\n        print("2.-Registrar Productos")\r\n        print("3.-Actualizar Productos")\r\n        print("4.-Borrar Productos")\r\n        print("5.-Salir")\r\n        try:\r\n            opc = int(input("Selecciona una Opción:"))\r\n        except:\r\n            continue\r\n        if opc > 0 and opc < 6:\r\n            if opc == 1:\r\n                try:\r\n                    productos = conectar.listaProductos()\r\n                    if len(productos) > 0:\r\n                        vino_funciones.listar(productos)\r\n                    else:\r\n                        print("No hay productos todavía.")\r\n                except:\r\n                    print("No se pudo ejecutar la consulta.")\r\n            elif opc == 2:\r\n                datos_producto = vino_funciones.datosProductos()\r\n                print(f"Estos son los productos a insertar {datos_producto}.")\r\n                for pro in datos_producto:\r\n                    try:\r\n                        conectar.registrarProductos(pro)\r\n                    except:\r\n                        print("No se pudo insertar productos.")\r\n            elif opc == 3:\r\n                    productos = conectar.listaProductos()\r\n                    try:\r\n                        if len(productos) > 0:\r\n                            productAct = vino_funciones.datosProductosActualizar(productos)\r\n                            print(f"Productos a actualizar: {productAct}.")\r\n                            for prod in productAct:\r\n                                conectar.actualizarProductos(prod)\r\n                        else:\r\n                            print("No hay productos.")                        \r\n                    except:\r\n                        print("Error en master actualizar.")                    \r\n            elif opc == 4:\r\n                try:\r\n                    productos = conectar.listaProductos()\r\n                    if len(productos) > 0:\r\n                        dato_eliminar = vino_funciones.registroEliminar(productos)\r\n                        print(f"Dato a Eliminar {dato_eliminar}")\r\n                        if not(dato_eliminar == ""): \r\n                            conectar.eliminarProducto(dato_eliminar)\r\n                        else:\r\n                            print("Codigo del producto no encontrado o vacio ....")\r\n                    else:\r\n                        print("No hay Registros Para Eliminar.")                   \r\n                except:\r\n                    print("No se ha podido ejecutar la orden.")                                \r\n            elif opc==5:\r\n                print("Hasta luego.")\r\n                bandera=False\r\n        else:\r\n            print("Opción no valida selecciona una opcion del 1-6")\r\n        \r\nif __name__=='__main__':\r\n    menuPrincipal()		7	9
\.


--
-- Data for Name: code_project_proyecto; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.code_project_proyecto (id, nombre, descripcion, status, tipo_contenido, url, fecha_modificado) FROM stdin;
3	Bot precios de electricidad	Éste es el primer pequeño proyecto que hice para subir a GitHub. Se trataba de sacar el precio de la electricidad actualizado desde la página de la compañía eléctrica, y calcular el precio que costaba cargar el patinete de reparto. La parte divertida era descargar el pdf y sacar el precio desde la tabla con la biblioteca Tabula, y qué Jan se descojonó cuando vio que había testeado que Python funcionara, jajajaaj.	abandonado	proyecto	https://github.com/EgoitzAB/bolt_rider/blob/master/src/cost_and_benefit/viabilidad_reparto.py	2024-01-02 23:29:21.687306+00
4	Probando modulos para hacer bots asíncronos	Pequeño ejercicio probando diferentes formas para hacer scraping asíncrono. Aunque en muchos casos sea mejor ni siquiera intentarlo, pues 8 minutos en éste caso no es mucho tiempo, y te arriesgas a ser banneado por el Webmaster, hice un pequeño ejercicio para comparar diferentes módulos asíncronos y multithreading y la forma normal. Primero asyncio, después threading y normal. Asyncio ganó la carrera.	finalizado	proyecto	https://github.com/EgoitzAB/syncron_asyncron_scrapping/blob/main/sueldos_asyncio.py	2024-01-02 23:29:21.687306+00
5	Bot para automatizar publicaciones de Facebook	Un pequeño bot de automatización de Facebook usando la herramienta Selenium. Falta añadirle una opción para leer documentos con listas y la opción de subir fotos. Quizás en un futuro lo siga y le añada algunas más, pero fue un ejercicio para usar Selenium.	finalizado	proyecto	https://github.com/EgoitzAB/Facebookbot/blob/main/src/post.py	2024-01-02 23:29:21.687306+00
6	Extractor de hoteles en booking	Proyecto que realicé cómo Freelance en Upwork, se trataba de obtener 12000 hoteles que solo tuvieran carácteres en alfabeto Inglés. Fue mi primer trabajo pagado, y aunque con mucho estrés, el cliente volvió a contratarme. Fue un proyecto rápido, realizado mientras viajaba a Budapest en tren. Le tengo un cariño especial, pero está bastante chapucero :D	finalizado	proyecto	https://github.com/EgoitzAB/booking_upwork/blob/main/mex.py	2024-01-02 23:29:21.687306+00
7	Extractor de precios de Vinos con CRUD	Esto es un ejercicio que hice para divertirme y poder mirar los precios de la competencia la última vez que hice una sustitución en la bodega donde trabajaba. Extrae los precios y los incorpora a una base datos Mysql. Dejé en suspenso el ponerle una interfaz gráfica TKinter, quizás más adelante. Qué buenas sensaciones me trae el scraping, volveré a hacer alguno pronto jajajaja. Si lo necesitas, no dudes en contactarme.	abandonado	proyecto	https://github.com/EgoitzAB/Wines_and_prices_comparator/	2024-01-02 23:29:21.687306+00
\.


--
-- Data for Name: cookie_consent_cookie; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.cookie_consent_cookie (id, name, description, path, domain, created, cookiegroup_id) FROM stdin;
1	csrftoken	Protegiendo tu Experiencia en www.egoitzabilleira.es\r\n\r\nEn www.egoitzabilleira.es, la seguridad y la protección de tus datos son nuestras principales prioridades. Para garantizar una experiencia en línea segura, implementamos medidas de seguridad avanzadas, entre las cuales se encuentra la protección contra ataques de CSRF (Cross-Site Request Forgery).\r\n¿Qué es CSRF y cómo te protegemos?\r\nCSRF es un tipo de ataque en el que un atacante puede realizar acciones no autorizadas en nombre de un usuario autenticado. Para evitar este riesgo, utilizamos tokens CSRF (Cross-Site Request Forgery) en nuestras operaciones que modifican el estado del servidor.\r\n¿Cómo funciona el Token CSRF?\r\nCuando inicias sesión en www.egoitzabilleira.es, se te asigna un token CSRF único. Este token se almacena de forma segura en tu navegador a través de una cookie llamada "csrftoken". Cada vez que realizas una acción que modifica datos en el servidor, el token CSRF se incluye en la solicitud, actuando como una firma digital que verifica tu identidad.\r\nTu Participación Activa en la Seguridad\r\nQueremos que te sientas seguro al utilizar nuestro sitio, y tu participación activa es clave. Asegúrate de mantener activadas las cookies en tu navegador para que el mecanismo de tokens CSRF funcione correctamente y proteja tu cuenta contra posibles amenazas.\r\nPreguntas o Inquietudes\r\nSi tienes alguna pregunta sobre cómo protegemos tu información o si encuentras alguna actividad sospechosa, no dudes en ponerte en contacto con nuestro equipo de soporte. Estamos aquí para garantizar que tu experiencia en www.egoitzabilleira.es sea segura y satisfactoria.\r\n\r\nEn [Nombre de tu Sitio Web], trabajamos continuamente para mejorar la seguridad y proporcionar un entorno en línea confiable. Gracias por ser parte de nuestra comunidad segura.	/	egoitzabilleira.es	2023-12-20 23:17:34.117601+00	1
2	sesion	¿Qué son las Cookies de Sesión en EgoitzAbilleira.es?\r\n\r\nLas cookies de sesión son pequeños archivos temporales que se almacenan en tu dispositivo mientras exploras EgoitzAbilleira.es. Estas cookies son fundamentales para mantener tu sesión activa durante tu visita y facilitar acciones como iniciar sesión y completar formularios.\r\nBeneficios de las Cookies de Sesión en EgoitzAbilleira.es\r\n\r\n    Inicio de Sesión Continuo: Las cookies de sesión garantizan que permanezcas autenticado mientras navegas por nuestro sitio, proporcionando una experiencia sin interrupciones.\r\n\r\n    Personalización: Utilizamos cookies de sesión para recordar tus preferencias y adaptar nuestro contenido a tus necesidades, brindándote una experiencia más personalizada.\r\n\r\n    Rendimiento Eficiente: Estas cookies contribuyen al rendimiento eficaz del sitio, mejorando la velocidad de carga de las páginas y asegurando una navegación fluida.\r\n\r\nCompromiso con tu Privacidad\r\n\r\nQueremos tranquilizarte respecto a tu privacidad en EgoitzAbilleira.es. Las cookies de sesión utilizadas son seguras, no almacenan información sensible y se eliminan automáticamente cuando cierras tu navegador, respetando tu privacidad en todo momento.\r\nControl y Gestión\r\n\r\nTe ofrecemos total control sobre las cookies de sesión. Puedes ajustar la configuración de tu navegador para aceptar o rechazar estas cookies. Sin embargo, ten en cuenta que deshabilitarlas puede afectar la funcionalidad del sitio y tu experiencia de usuario.\r\n¿Preguntas o Comentarios?\r\n\r\nSi tienes alguna pregunta sobre nuestro uso de cookies de sesión en EgoitzAbilleira.es o cualquier otra inquietud relacionada con la seguridad y la privacidad, nuestro equipo de soporte está aquí para ayudarte. Contáctanos para garantizar que tu visita sea cómoda, personalizada y segura.	/	egoitzabilleira.es	2023-12-20 23:19:16.858647+00	1
\.


--
-- Data for Name: cookie_consent_cookiegroup; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.cookie_consent_cookiegroup (id, varname, name, description, is_required, is_deletable, ordering, created) FROM stdin;
1	required	Required Cookies	This cookies are required for website.	t	f	0	2023-12-20 23:07:59.373647+00
2	funcionales	terceros	Cookies que mejoran el funcionamiento y hacen que las soluciones implementadas de terceros estén operativas.	f	t	0	2023-12-22 12:04:53.498576+00
\.


--
-- Data for Name: cookie_consent_logitem; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.cookie_consent_logitem (id, action, version, created, cookiegroup_id) FROM stdin;
1	1	2023-12-22T12:06:07.922371+00:00	2023-12-22 12:07:37.984979+00	2
2	-1	2023-12-22T12:06:07.922371+00:00	2023-12-22 12:22:29.837077+00	2
3	-1	2023-12-22T12:06:07.922371+00:00	2023-12-24 17:06:59.217945+00	2
4	-1	2023-12-22T12:06:07.922371+00:00	2023-12-24 17:07:00.164551+00	2
5	-1	2023-12-22T12:06:07.922371+00:00	2023-12-24 17:07:14.032715+00	2
6	1	2023-12-22T12:06:07.922371+00:00	2023-12-24 17:08:21.289969+00	2
7	-1	2023-12-22T12:06:07.922371+00:00	2023-12-24 17:08:33.530992+00	2
8	1	2023-12-22T12:06:07.922371+00:00	2023-12-24 17:08:36.851043+00	2
9	-1	2023-12-22T12:06:07.922371+00:00	2023-12-24 23:43:39.43466+00	2
10	1	2023-12-22T12:06:07.922371+00:00	2023-12-24 23:44:29.650188+00	2
11	1	2023-12-22T12:06:07.922371+00:00	2023-12-24 23:44:31.230076+00	2
12	1	2023-12-22T12:06:07.922371+00:00	2023-12-24 23:46:01.251889+00	2
13	-1	2023-12-22T12:06:07.922371+00:00	2023-12-24 23:49:44.609382+00	2
14	1	2023-12-22T12:06:07.922371+00:00	2023-12-24 23:49:50.431367+00	2
15	1	2023-12-22T12:06:07.922371+00:00	2023-12-24 23:49:54.793609+00	2
16	1	2023-12-22T12:06:07.922371+00:00	2023-12-24 23:50:18.40521+00	2
17	1	2023-12-22T12:06:07.922371+00:00	2023-12-24 23:50:26.484208+00	2
18	1	2023-12-22T12:06:07.922371+00:00	2023-12-25 01:09:39.910963+00	2
19	-1	2023-12-22T12:06:07.922371+00:00	2023-12-25 01:13:42.782282+00	2
20	1	2023-12-22T12:06:07.922371+00:00	2023-12-25 01:14:23.952953+00	2
21	-1	2023-12-22T12:06:07.922371+00:00	2023-12-25 01:14:32.326146+00	2
22	1	2023-12-22T12:06:07.922371+00:00	2023-12-25 01:14:54.631615+00	2
23	-1	2023-12-22T12:06:07.922371+00:00	2023-12-25 01:15:05.083567+00	2
24	1	2023-12-22T12:06:07.922371+00:00	2023-12-25 01:17:05.302024+00	2
25	1	2023-12-22T12:06:07.922371+00:00	2023-12-25 01:43:35.86101+00	2
26	-1	2023-12-22T12:06:07.922371+00:00	2023-12-25 01:43:42.043005+00	2
27	1	2023-12-22T12:06:07.922371+00:00	2023-12-25 01:47:53.352679+00	2
28	-1	2023-12-22T12:06:07.922371+00:00	2023-12-25 01:48:01.571497+00	2
29	-1	2023-12-22T12:06:07.922371+00:00	2023-12-26 21:26:08.381696+00	2
30	1	2023-12-22T12:06:07.922371+00:00	2023-12-27 00:08:43.769314+00	2
31	-1	2023-12-22T12:06:07.922371+00:00	2023-12-27 11:42:26.746803+00	2
32	-1	2023-12-22T12:06:07.922371+00:00	2023-12-28 09:20:15.897949+00	2
33	-1	2023-12-22T12:06:07.922371+00:00	2023-12-28 09:20:22.449311+00	2
34	-1	2023-12-22T12:06:07.922371+00:00	2023-12-29 00:27:11.071663+00	2
35	1	2023-12-22T12:06:07.922371+00:00	2023-12-30 00:15:43.217039+00	2
36	-1	2023-12-22T12:06:07.922371+00:00	2023-12-30 17:57:54.266313+00	2
37	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 00:43:48.878025+00	2
38	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:09:42.488191+00	2
39	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:09:57.926474+00	2
40	1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:10:00.12006+00	2
41	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:10:19.514742+00	2
42	1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:11:17.050851+00	2
43	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:11:39.97457+00	2
44	1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:11:45.267739+00	2
45	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:11:54.198996+00	2
46	1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:12:16.219432+00	2
47	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:12:17.089556+00	2
48	1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:12:17.735692+00	2
49	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:12:23.010213+00	2
50	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:14:00.019423+00	2
51	1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:14:01.593619+00	2
52	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:14:02.417695+00	2
53	1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:14:11.894388+00	2
54	1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:15:23.893299+00	2
55	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:15:27.991636+00	2
56	1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:17:08.018868+00	2
57	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:17:15.016367+00	2
58	1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:17:15.997946+00	2
59	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:17:16.752767+00	2
60	1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:17:17.363926+00	2
61	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:17:17.923314+00	2
62	1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:17:18.490237+00	2
63	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:17:19.016093+00	2
64	1	2023-12-22T12:06:07.922371+00:00	2023-12-31 01:17:26.20973+00	2
65	1	2023-12-22T12:06:07.922371+00:00	2023-12-31 02:27:28.409731+00	2
66	-1	2023-12-22T12:06:07.922371+00:00	2023-12-31 07:59:53.59188+00	2
67	-1	2023-12-22T12:06:07.922371+00:00	2024-01-02 16:17:33.260693+00	2
68	1	2023-12-22T12:06:07.922371+00:00	2024-01-02 16:17:35.226163+00	2
69	-1	2023-12-22T12:06:07.922371+00:00	2024-01-02 22:09:18.712491+00	2
70	-1	2023-12-22T12:06:07.922371+00:00	2024-01-02 22:35:21.23157+00	2
71	1	2023-12-22T12:06:07.922371+00:00	2024-01-02 23:12:38.741087+00	2
72	-1	2023-12-22T12:06:07.922371+00:00	2024-01-02 23:12:49.175993+00	2
73	-1	2023-12-22T12:06:07.922371+00:00	2024-01-03 03:56:52.481133+00	2
74	-1	2023-12-22T12:06:07.922371+00:00	2024-01-03 04:49:30.429462+00	2
75	-1	2023-12-22T12:06:07.922371+00:00	2024-01-03 23:40:27.994801+00	2
76	-1	2023-12-22T12:06:07.922371+00:00	2024-01-04 00:03:38.203702+00	2
77	-1	2023-12-22T12:06:07.922371+00:00	2024-01-06 23:53:41.755157+00	2
\.


--
-- Data for Name: core_pdf; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.core_pdf (id, file, name) FROM stdin;
1	pdfs/Enero2024.pdf	CV
\.


--
-- Data for Name: core_secciones; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.core_secciones (id, seccion, texto, imagen, created, updated, categoria) FROM stdin;
1	Sobre mí	Desarrollo por mi cuenta hace algunos años. Comencé por estudiar Linux y Python hace ya casi 4 años, todo en Inglés para coger nivel. Aunque los inicios fueron duros, a día de hoy sé programar en Python sobre todo en el campo del desarrollo web y el web scraping, he hecho algunos cursos de ciberseguridad y redes, utilizo bien el CSS y Javascript, puedo montar servidores, CI/CD, bases de datos etc.\r\n\r\nTambién tengo tres cursos del grado de Derecho y uno del de pedagogía. Me gusta la Historia y la Filosofía, sobre todo política, y en general soy bastante curioso desde que era pequeño. Para saber más pincha en el título del párrafo o en el menú.	secciones/IMG_20220726_134742_ur1pmfd.jpg	2023-12-20 22:12:11.791459+00	2023-12-20 22:12:11.79147+00	main
2	Cursos y certificaciones	No he querido cursar ningún grado ni me gustan en general los títulos, es una batalla personal que tengo desde pequeño, pues se me hacía fácil el superar exámenes. No obstante, para obtener y acreditar el conocimiento en la materia, he conseguido varias certificaciones en freeCodeCamp, Coursera, IbmSkillsBuild, cursos del SEPE y algunos otros que se han quedado en las tinieblas.\r\n\r\nPara ver más haz click en el título de la sección o búscalo en el menú, no obstante, en las artes técnicas lo importante es el Nou-Jau, Know-How como dicen los ingleses.	secciones/images_SHJ7yGv.jpeg	2023-12-27 20:58:19.620156+00	2023-12-27 20:58:19.620164+00	main
3	Proyectos y Código	He hecho proyectos para rellenar mi GitHub, y muchos más que he ido perdiendo por el cambio de ordenadores. Sólo he cobrado por alguno de scraping, así que los hacía por recomendación de mi mentor Janillo, pero subiré algunas páginas web en los siguientes meses, en el mundo del autobombo y el título para orinar, esto es imprescindible. También les mejoraré el README.md, pero como bien me decía Jan, el mejor programador es el más vago. Hace todo rápido y busca la manera de terminarlo cuánto antes, yo le replicaba por la calidad, pero nos entendíamos.\r\n\r\nSi quiere ver algún código con las explicaciones sobre su funcionalidad, pinche en el título de esta sección o mire en su apartado del menú.	secciones/miner.jpeg	2023-12-27 21:05:42.147026+00	2023-12-27 21:05:42.147036+00	main
4	Contacto	Para cualquier entrevista, propuesta de contratación o duda, pueden contactarme en mi email. Para que no moleste nadie, le he puesto un captcha, qué yo también hice mi bombardeador de emails :D. \r\n\r\nTambién puedo ponerle en contacto con buenos técnicos de ordenadores. En general, puedo realizarle solventemente cualquier página web que no requiera de intrincados mecanismos; y bots de todo tipo, tanto de automatización de aplicaciones y tareas, cómo de minado de datos.\r\n\r\nPara más información, pinche el título o acceda desde el menú.	secciones/trabajo.jpeg	2023-12-27 21:13:40.749051+00	2023-12-27 21:13:40.749059+00	main
5	Libros y recomendaciones	Como me gusta mucho leer y ver conferencias, le dejo una sección dedicada a todos los temas sobre los que he ido profundizando a lo largo de mi vida. Si quiere comprar algún título, le dejo el link de Amazon y así me pago el hospedaje de esta web. Espero que los títulos y referencias que vaya dejando le puedan servir, iré añadiendo más según vaya leyendo y recordando.\r\n\r\nTiene todas mis recomendaciones haciendo click en el título de esta sección, o en la pestaña libros de menú.	secciones/libros.jpeg	2023-12-27 21:26:18.71637+00	2023-12-27 21:26:18.716381+00	main
6	presentación	Nacido en 1985, tras pasar por todo tipo de trabajos que cada vez pagaban menos, cómo la mayoría en España, decido buscar un futuro como tantos otros en el ámbito tecnológico. En mi caso, me encantan los ordenadores desde pequeño así que me voy adaptando al medio, y viendo todas las posibilidades que ofrece.	secciones/friki.jpeg	2023-12-28 16:59:29.406805+00	2023-12-28 16:59:29.406817+00	personal
7	Estudios	Estudié en la Ikastola del insigne aquinatense, Santo Tomás de mi ciudad. Saqué buenas notas hasta que decidí suspender todas, cosa que no conseguí. Así, 4 de la ESO la hice a distancia, y años después saqué el Bachillerato de Letras a distancia en el instituto Ramiro de Maeztu de Alava. En el último año, al querer acceder a la universidad también superé el acceso a la universidad para mayores de 25 años. Desde entonces, sin demasiado interés, tengo sacados tres cursos de Derecho y uno de Pedagogía. ¿Qué quería ser de niño? Abogado de Common Law. Por eso, no hay que hacer mucho caso a los niños :D\r\n\r\nEn la carrera de Derecho, aprobé todo lo relacionado con el departamento de Filosofía del Derecho y Derecho político, por lo que no tengo prisa en terminar. En la de Pedagogía, elegí todas las asignaturas que me interesaban y fue suficiente para saber, que habría que prohibir a los pedagogos y enseñar a leer a los niños. Son un peligro para la vida en sociedad.	secciones/estudiante.jpeg	2023-12-28 17:12:31.974876+00	2023-12-28 17:12:31.974887+00	personal
8	Trabajo	Empecé a trabajar a los 14 para tener dinero extra, repartiendo una revistilla que nadie leía. Hice alguna pequeña mudanza con 16, y conseguí entrar en uno de los bares más duros de la ciudad. Tras un año, me fuí a vivir a Navarra. Allí trabajé en un par de fábricas durante unos meses, y desde entonces he estado como montador de pladur un año, barrendero a trozos otro, camarero de nuevo, auxiliar de una fábrica de pollos, haciendo pequeñas chapuzas, operario de producción y cocinero industrial otro, limpiador de portales, repartidor de comida en bici, teleoperador, tres años como vinatero, para de nuevo terminar de repartidor y teleoperador.\r\n\r\nMi trabajo preferido, es el de repartidor, pero llevo años preparándome para dar el salto al mundo de la programación, así que esta página servirá cómo CV y punto de entrada para el que quiera contactarme. Programo todos los días y quiero hacer un buen trabajo, como he desempeñado en todos los que he estado a lo largo de mi vida. Cuando no quiero hacer algo y no lo voy a hacer bien, prefiero decir que no y no hacerlo. Me considero una persona que cuida el detalle y hace que el cliente se sienta satisfecho.	secciones/trabajo.jpeg.jpeg	2023-12-28 17:36:35.382425+00	2023-12-28 17:36:35.382449+00	personal
9	Aficiones	Me gusta mucho la lectura desde pequeño, sobre todo temas relacionados con la Historia y la Filosofía. Actualmente estoy profundizando en la Historia de España y la literatura de sus diferentes épocas, aunque estuve 9 años con la Historia de Roma en el pasado. En Filosofía, suelo leer mucho Filosofía del Derecho y Política, con algo de sociología. Estudio las fallas del régimen de gobierno actual y su cambio y mejora, aunque no hable demasiado sobre el tema pues no me entendería casi nadie.\r\n\r\nTambién me gusta hacer deporte, bicicleta sobre todo, aunque suelo ir a los gimnasios callejeros y en cualquier lado puedes hacer este tipo de ejercicios. No suelo ver ninguno y menos fútbol, dónde un millonario cobra lo que yo en un mes al minuto. Tenis y Ciclismo serían los dos únicos a los que aún les echo un ojo.\r\n\r\nMe gusta ver y visitar lugares nuevos, la gastronomía de alto nivel y probar los grandes vinos del país. He vivido en Suecia y República Checa, y tengo ganas de visitar o vivir en Paraguay o Croacia algún día. En cuanto a vinos, El Único de Vega Sicilia y el Macán son de mis preferidos, aunque suelo visitar a mi anterior jefe para consejos. En restaurantes, el siguiente será el Disfrutar de Barcelona, alguna vez hay que darse un capricho.\r\n\r\nPor lo demás, suelo estar viendo y leyendo sobre tecnología todos los días, y no pongo la tele hace años. Me gusta hablar con gente desconocida por la calle como Sócrates, y suelo estar casi siempre de buen humor. ¡Y qué no falte la música! Desde clásica a punk pasando por el reggueaton, todas tienen su punto.	secciones/cocina.jpeg	2023-12-28 17:49:13.531949+00	2023-12-28 17:49:13.531975+00	personal
\.


--
-- Data for Name: cursos_curso; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.cursos_curso (id, nombre, empresa, identificador, url, archivo, descripcion, horas, fecha_modificado) FROM stdin;
6	Cloud Computing Fundamentals	IBM	(PLAN-2EC3A305F2C3)	https://skills.yourlearning.ibm.com/activity/PLAN-2EC3A305F2C3	archivos/Captura_desde_2023-12-08_17-08-53_QiNIhTZ.png	Curso sobre las tecnologías devops, diferencias y mejores usos, así cómo una panorámica sobre el campo.	15	2024-01-02 23:54:13.615211+00
5	Web Development Fundamentals	IBM	(PLAN-8749C02A78EC)	https://skills.yourlearning.ibm.com/certificate/PLAN-8749C02A78EC	archivos/Captura_desde_2023-12-08_17-07-52_8jfl68B.png	Los fundamentos del desarrollo web, con css, html, testing, devops etc.	12	2024-01-02 23:54:13.615211+00
4	Desarrollo Web en Python	IBM	PLAN-9BC1575F55B8	https://skills.yourlearning.ibm.com/activity/PLAN-9BC1575F55B8	archivos/Captura_desde_2023-12-08_17-02-48_tAjhFi2.png	Plan completo sobre desarrollo web, con css, html, javascript y python.	10	2024-01-02 23:54:13.615211+00
3	Data Analysis with Python	freeCodeCamp	data-analysis-with-python-v7	https://freecodecamp.org/certification/fcc80d50951-a974-405d-a1d4-1a8f540de25c/data-analysis-with-python-v7	archivos/Captura_desde_2023-12-08_00-37-33_SEQZvuS.png	Scikit, y demás creo	300	2024-01-02 23:54:13.615211+00
2	Scientific Computing with Python	freeCodeCamp	fcc80d50951-a974-405d-a1d4-1a8f540de25c	https://freecodecamp.org/certification/fcc80d50951-a974-405d-a1d4-1a8f540de25c/scientific-computing-with-python-v7	archivos/Captura_desde_2023-12-08_00-37-16_imdCkKy.png	Mirar luego, pandas, matplot, numpys etc.	300	2024-01-02 23:54:13.615211+00
1	Responsive Web Design	freeCodeCamp	fcc80d50951-a974-405d-a1d4-1a8f540de25c	https://freecodecamp.org/certification/fcc80d50951-a974-405d-a1d4-1a8f540de25c/responsive-web-design	archivos/Captura_desde_2023-12-08_00-36-11_X3pjl0A.png	Curso de diseño de web responsivas, html y css sobre todo.	300	2024-01-02 23:54:13.615211+00
\.


--
-- Data for Name: cursos_curso_habilidades; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.cursos_curso_habilidades (id, curso_id, habilidad_id) FROM stdin;
1	1	2
2	2	1
3	3	1
4	4	1
5	5	1
6	6	1
\.


--
-- Data for Name: cursos_habilidad; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.cursos_habilidad (id, nombre) FROM stdin;
1	CSS
2	css
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2023-12-20 22:12:11.792722+00	1	presentacion	1	[{"added": {}}]	7	1
2	2023-12-20 22:12:42.175573+00	1	presentacion	2	[{"changed": {"fields": ["Imagen"]}}]	7	1
3	2023-12-20 23:07:59.374477+00	1	Required Cookies	1	[{"added": {}}]	14	1
4	2023-12-20 23:17:34.118416+00	1	csrftoken egoitzabilleira.es/	1	[{"added": {}}]	13	1
5	2023-12-20 23:19:16.859292+00	2	sesion egoitzabilleira.es/	1	[{"added": {}}]	13	1
6	2023-12-22 12:01:56.661467+00	1	Required Cookies	2	[]	14	1
7	2023-12-22 12:04:53.500934+00	2	terceros	1	[{"added": {}}]	14	1
8	2023-12-22 12:06:07.923615+00	3	Google ReCaptcha egoitzabilleira.es/	1	[{"added": {}}]	13	1
9	2023-12-22 12:21:36.996616+00	3	GoogleReCaptcha egoitzabilleira.es/	2	[{"changed": {"fields": ["Name"]}}]	13	1
10	2023-12-26 21:07:12.823482+00	1	CSS	1	[{"added": {}}]	8	1
11	2023-12-26 21:07:25.359754+00	2	css	1	[{"added": {}}]	8	1
12	2023-12-26 21:07:31.834825+00	1	Responsive Web Design	1	[{"added": {}}]	9	1
13	2023-12-26 21:11:12.369792+00	2	Scientific Computing with Python	1	[{"added": {}}]	9	1
14	2023-12-26 21:13:18.578704+00	3	Data Analysis with Python	1	[{"added": {}}]	9	1
15	2023-12-26 21:18:34.892024+00	4	Desarrollo Web en Python	1	[{"added": {}}]	9	1
16	2023-12-26 21:20:37.787928+00	5	Web Development Fundamentals	1	[{"added": {}}]	9	1
17	2023-12-26 21:22:35.806031+00	6	Cloud Computing Fundamentals	1	[{"added": {}}]	9	1
18	2023-12-27 20:45:13.182489+00	1	Sobre mí	2	[{"changed": {"fields": ["Seccion", "Texto", "Imagen"]}}]	7	1
19	2023-12-27 20:58:19.621885+00	2	Cursos y certificaciones	1	[{"added": {}}]	7	1
20	2023-12-27 21:05:42.147834+00	3	Proyectos y Código	1	[{"added": {}}]	7	1
21	2023-12-27 21:13:40.749761+00	4	Contacto	1	[{"added": {}}]	7	1
22	2023-12-27 21:26:18.71709+00	5	Libros y recomendaciones	1	[{"added": {}}]	7	1
23	2023-12-28 16:59:29.4106+00	6	presentación	1	[{"added": {}}]	7	1
24	2023-12-28 17:12:31.975838+00	7	Estudios	1	[{"added": {}}]	7	1
25	2023-12-28 17:36:35.384663+00	8	Trabajo	1	[{"added": {}}]	7	1
26	2023-12-28 17:49:13.534862+00	9	Aficiones	1	[{"added": {}}]	7	1
27	2023-12-29 16:27:29.499367+00	6	Cloud Computing Fundamentals	2	[{"changed": {"fields": ["Tags"]}}]	9	1
28	2023-12-30 23:28:18.133748+00	3	Proyecto object (3)	1	[{"added": {}}, {"added": {"name": "codigo", "object": "Codigo object (5)"}}, {"added": {"name": "codigo", "object": "Codigo object (6)"}}, {"added": {"name": "codigo", "object": "Codigo object (7)"}}, {"added": {"name": "codigo", "object": "Codigo object (8)"}}]	10	1
29	2023-12-30 23:29:06.003149+00	3	Proyecto object (3)	2	[{"changed": {"name": "codigo", "object": "Codigo object (7)", "fields": ["Indice"]}}, {"changed": {"name": "codigo", "object": "Codigo object (8)", "fields": ["Indice"]}}]	10	1
30	2023-12-31 00:22:04.214771+00	3	Proyecto object (3)	2	[]	10	1
31	2023-12-31 00:56:54.866835+00	1	Responsive Web Design	2	[{"changed": {"fields": ["Archivo", "Tags"]}}]	9	1
32	2023-12-31 00:58:38.978633+00	3	Data Analysis with Python	2	[{"changed": {"fields": ["Archivo", "Tags"]}}]	9	1
33	2023-12-31 01:50:06.219129+00	4	Proyecto object (4)	1	[{"added": {}}, {"added": {"name": "codigo", "object": "Codigo object (9)"}}, {"added": {"name": "codigo", "object": "Codigo object (10)"}}, {"added": {"name": "codigo", "object": "Codigo object (11)"}}, {"added": {"name": "codigo", "object": "Codigo object (12)"}}, {"added": {"name": "codigo", "object": "Codigo object (13)"}}, {"added": {"name": "codigo", "object": "Codigo object (14)"}}]	10	1
34	2023-12-31 01:58:51.631915+00	5	Proyecto object (5)	1	[{"added": {}}, {"added": {"name": "codigo", "object": "Codigo object (15)"}}, {"added": {"name": "codigo", "object": "Codigo object (16)"}}, {"added": {"name": "codigo", "object": "Codigo object (17)"}}, {"added": {"name": "codigo", "object": "Codigo object (18)"}}, {"added": {"name": "codigo", "object": "Codigo object (19)"}}, {"added": {"name": "codigo", "object": "Codigo object (20)"}}]	10	1
35	2024-01-02 21:49:17.388609+00	6	Proyecto object (6)	1	[{"added": {}}, {"added": {"name": "codigo", "object": "Codigo object (21)"}}, {"added": {"name": "codigo", "object": "Codigo object (22)"}}, {"added": {"name": "codigo", "object": "Codigo object (23)"}}, {"added": {"name": "codigo", "object": "Codigo object (24)"}}, {"added": {"name": "codigo", "object": "Codigo object (25)"}}, {"added": {"name": "codigo", "object": "Codigo object (26)"}}, {"added": {"name": "codigo", "object": "Codigo object (27)"}}, {"added": {"name": "codigo", "object": "Codigo object (28)"}}, {"added": {"name": "codigo", "object": "Codigo object (29)"}}]	10	1
36	2024-01-02 22:05:55.577637+00	7	Proyecto object (7)	1	[{"added": {}}, {"added": {"name": "codigo", "object": "Codigo object (30)"}}, {"added": {"name": "codigo", "object": "Codigo object (31)"}}, {"added": {"name": "codigo", "object": "Codigo object (32)"}}, {"added": {"name": "codigo", "object": "Codigo object (33)"}}, {"added": {"name": "codigo", "object": "Codigo object (34)"}}, {"added": {"name": "codigo", "object": "Codigo object (35)"}}, {"added": {"name": "codigo", "object": "Codigo object (36)"}}, {"added": {"name": "codigo", "object": "Codigo object (37)"}}, {"added": {"name": "codigo", "object": "Codigo object (38)"}}]	10	1
37	2024-01-02 22:06:40.51336+00	7	Proyecto object (7)	2	[{"changed": {"fields": ["Descripcion"]}}]	10	1
38	2024-01-02 22:36:55.059036+00	6	Cloud Computing Fundamentals	2	[]	9	1
39	2024-01-02 22:39:12.267393+00	5	Web Development Fundamentals	2	[{"changed": {"fields": ["Tags"]}}]	9	1
40	2024-01-02 22:39:41.919265+00	4	Desarrollo Web en Python	2	[{"changed": {"fields": ["Tags"]}}]	9	1
41	2024-01-02 22:39:47.354615+00	3	Data Analysis with Python	2	[]	9	1
42	2024-01-02 22:40:15.932037+00	2	Scientific Computing with Python	2	[{"changed": {"fields": ["Tags"]}}]	9	1
43	2024-01-02 22:40:25.087841+00	1	Responsive Web Design	2	[]	9	1
44	2024-01-02 23:27:39.609957+00	1	localhost:8000	2	[{"changed": {"fields": ["Domain name", "Display name"]}}]	18	1
45	2024-01-06 23:27:23.062033+00	1	CV	1	[{"added": {}}]	19	1
46	2024-01-06 23:53:16.325232+00	3	GoogleReCaptcha egoitzabilleira.es/	3		13	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	core	secciones
8	cursos	habilidad
9	cursos	curso
10	code_project	proyecto
11	code_project	codigo
12	recomendaciones	recomendacion
13	cookie_consent	cookie
14	cookie_consent	cookiegroup
15	cookie_consent	logitem
16	taggit	tag
17	taggit	taggeditem
18	sites	site
19	core	pdf
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2023-12-20 22:09:32.91146+00
2	auth	0001_initial	2023-12-20 22:09:33.054576+00
3	admin	0001_initial	2023-12-20 22:09:33.105176+00
4	admin	0002_logentry_remove_auto_add	2023-12-20 22:09:33.12074+00
5	admin	0003_logentry_add_action_flag_choices	2023-12-20 22:09:33.134792+00
6	contenttypes	0002_remove_content_type_name	2023-12-20 22:09:33.151948+00
7	auth	0002_alter_permission_name_max_length	2023-12-20 22:09:33.159888+00
8	auth	0003_alter_user_email_max_length	2023-12-20 22:09:33.16854+00
9	auth	0004_alter_user_username_opts	2023-12-20 22:09:33.175667+00
10	auth	0005_alter_user_last_login_null	2023-12-20 22:09:33.185279+00
11	auth	0006_require_contenttypes_0002	2023-12-20 22:09:33.189975+00
12	auth	0007_alter_validators_add_error_messages	2023-12-20 22:09:33.198649+00
13	auth	0008_alter_user_username_max_length	2023-12-20 22:09:33.212511+00
14	auth	0009_alter_user_last_name_max_length	2023-12-20 22:09:33.222745+00
15	auth	0010_alter_group_name_max_length	2023-12-20 22:09:33.232719+00
16	auth	0011_update_proxy_permissions	2023-12-20 22:09:33.241256+00
17	auth	0012_alter_user_first_name_max_length	2023-12-20 22:09:33.250505+00
18	code_project	0001_initial	2023-12-20 22:09:33.29577+00
19	cookie_consent	0001_initial	2023-12-20 22:09:33.345091+00
20	cookie_consent	0002_auto__add_logitem	2023-12-20 22:09:33.373621+00
21	core	0001_initial	2023-12-20 22:09:33.394323+00
22	cursos	0001_initial	2023-12-20 22:09:33.460145+00
23	recomendaciones	0001_initial	2023-12-20 22:09:33.48341+00
24	sessions	0001_initial	2023-12-20 22:09:33.52009+00
25	taggit	0001_initial	2023-12-29 16:20:42.456632+00
26	taggit	0002_auto_20150616_2121	2023-12-29 16:20:42.472264+00
27	taggit	0003_taggeditem_add_unique_index	2023-12-29 16:20:42.48909+00
28	taggit	0004_alter_taggeditem_content_type_alter_taggeditem_tag	2023-12-29 16:20:42.512847+00
29	taggit	0005_auto_20220424_2025	2023-12-29 16:20:42.521456+00
30	taggit	0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx	2023-12-29 16:20:42.552149+00
31	cursos	0002_curso_tags	2023-12-29 16:20:42.567699+00
32	code_project	0002_alter_codigo_options_codigo_indice	2023-12-30 23:13:42.706639+00
33	sites	0001_initial	2024-01-02 23:17:43.37774+00
34	sites	0002_alter_domain_unique	2024-01-02 23:17:43.39049+00
35	code_project	0003_proyecto_fecha_modificado	2024-01-02 23:29:21.692261+00
36	cursos	0003_curso_fecha_modificado	2024-01-02 23:54:13.618831+00
37	recomendaciones	0002_recomendacion_fecha_modificado	2024-01-03 00:18:50.510377+00
38	core	0002_pdf	2024-01-06 23:16:00.699293+00
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
yqnk7edh6c1b2sbuar4y0u45rpqfjau3	.eJxVjEEOwiAQRe_C2hAQKINL956BzMAgVUOT0q6Md7dNutDtf-_9t4i4LjWunec4ZnERWpx-N8L05LaD_MB2n2Sa2jKPJHdFHrTL25T5dT3cv4OKvW41aFRsEKCooDyRcwQhae0T2jOYZLKx1hU9FPIIlmnYABvQjIYDKfH5AtpGN_o:1rG4me:qejoOCdIL4hL4ZJt9E5faD9tZj3lrpAv_MGvs9dhM4M	2024-01-03 22:11:20.747379+00
i0dxwn42s0l968en0hfyv180yhhrb3e3	.eJxVjEEOwiAQRe_C2hAQKINL956BzMAgVUOT0q6Md7dNutDtf-_9t4i4LjWunec4ZnERWpx-N8L05LaD_MB2n2Sa2jKPJHdFHrTL25T5dT3cv4OKvW41aFRsEKCooDyRcwQhae0T2jOYZLKx1hU9FPIIlmnYABvQjIYDKfH5AtpGN_o:1rG5cd:K92lxh9HsCtaD6n_ls30R-R1jU_Gdk1M0piMwSZW3o0	2024-01-03 23:05:03.93336+00
tetfaq81dp2bqty8j0vug3bwii40opno	.eJxVjEEOwiAQRe_C2hAQKINL956BzMAgVUOT0q6Md7dNutDtf-_9t4i4LjWunec4ZnERWpx-N8L05LaD_MB2n2Sa2jKPJHdFHrTL25T5dT3cv4OKvW41aFRsEKCooDyRcwQhae0T2jOYZLKx1hU9FPIIlmnYABvQjIYDKfH5AtpGN_o:1rG5vn:7yPdVKx_mHdWek3CRCaKzrn-UMW7nwGb3I_GW3s2YaQ	2024-01-03 23:24:51.474164+00
djlc0z4l6p5m5rh08h01rbt1xh3t78fy	.eJxVjEEOwiAQRe_C2hAQKINL956BzMAgVUOT0q6Md7dNutDtf-_9t4i4LjWunec4ZnERWpx-N8L05LaD_MB2n2Sa2jKPJHdFHrTL25T5dT3cv4OKvW41aFRsEKCooDyRcwQhae0T2jOYZLKx1hU9FPIIlmnYABvQjIYDKfH5AtpGN_o:1rIEaM:lbcWuOYI6kBYuSubjwwHQu3n8V7ouXAJkgnV9qnrrbw	2024-01-09 21:03:34.494585+00
jiw8a1tvpqxujp8tqmtrghs53kb09fas	.eJxVjEEOwiAQRe_C2hAQKINL956BzMAgVUOT0q6Md7dNutDtf-_9t4i4LjWunec4ZnERWpx-N8L05LaD_MB2n2Sa2jKPJHdFHrTL25T5dT3cv4OKvW41aFRsEKCooDyRcwQhae0T2jOYZLKx1hU9FPIIlmnYABvQjIYDKfH5AtpGN_o:1rJFgy:ley2Uh-sEZTmts3fRiHg-_r2no9_plYnrfSPlzjrwfo	2024-01-12 16:26:36.44204+00
kjv4g7ojnf6ocwcmcn4ieporkexnvdcn	.eJxVjEEOwiAQRe_C2hAQKINL956BzMAgVUOT0q6Md7dNutDtf-_9t4i4LjWunec4ZnERWpx-N8L05LaD_MB2n2Sa2jKPJHdFHrTL25T5dT3cv4OKvW41aFRsEKCooDyRcwQhae0T2jOYZLKx1hU9FPIIlmnYABvQjIYDKfH5AtpGN_o:1rJFjG:S-fvJXB-1g7dODTiCqxHiMVCWiOlT_5ekOJ--Qpwpxw	2024-01-12 16:28:58.238373+00
6qrdetvy4s1fzyqfdy5ivxnpau9mebxg	.eJxVjEEOwiAQRe_C2hAQKINL956BzMAgVUOT0q6Md7dNutDtf-_9t4i4LjWunec4ZnERWpx-N8L05LaD_MB2n2Sa2jKPJHdFHrTL25T5dT3cv4OKvW41aFRsEKCooDyRcwQhae0T2jOYZLKx1hU9FPIIlmnYABvQjIYDKfH5AtpGN_o:1rKn4U:G9qPXjZDceior9EeKrp4KjxGdVg8f1VLJWC3WoqVOHw	2024-01-16 22:17:14.278182+00
u8gk5sz1lstmubkytftv9kajcg79msna	.eJxVjEEOwiAQRe_C2hAQKINL956BzMAgVUOT0q6Md7dNutDtf-_9t4i4LjWunec4ZnERWpx-N8L05LaD_MB2n2Sa2jKPJHdFHrTL25T5dT3cv4OKvW41aFRsEKCooDyRcwQhae0T2jOYZLKx1hU9FPIIlmnYABvQjIYDKfH5AtpGN_o:1rKnN4:2D_I44tl7dzLQf4saYAKpjn2ukowmKCMMl2ep3YefbY	2024-01-16 22:36:26.350027+00
\.


--
-- Data for Name: django_site; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.django_site (id, domain, name) FROM stdin;
1	localhost:8000	localhost:8000
\.


--
-- Data for Name: recomendaciones_recomendacion; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.recomendaciones_recomendacion (id, categoria, titulo, paginas, autor, link, foto, precio, caracteristicas, descripcion, fecha_modificado) FROM stdin;
\.


--
-- Data for Name: taggit_tag; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.taggit_tag (id, name, slug) FROM stdin;
1	cloud	cloud
2	css	css
3	devops	devops
4	html	html
5	Numpy	numpy
6	Pandas	pandas
7	Python	python
8	django	django
10	python	python_1
11	javascript	javascript
12	matplot	matplot
13	seaborn	seaborn
15	pandas	pandas_1
17	numpy	numpy_1
18	scikit	scikit
\.


--
-- Data for Name: taggit_taggeditem; Type: TABLE DATA; Schema: public; Owner: ego
--

COPY public.taggit_taggeditem (id, object_id, content_type_id, tag_id) FROM stdin;
1	6	9	1
2	6	9	2
3	6	9	3
4	1	9	2
5	1	9	4
6	3	9	5
7	3	9	6
8	3	9	7
9	5	9	1
10	5	9	2
11	5	9	3
12	5	9	4
13	4	9	2
14	4	9	4
15	4	9	8
16	4	9	10
17	4	9	11
18	2	9	10
19	2	9	12
20	2	9	13
21	2	9	15
22	2	9	17
23	2	9	18
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 76, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 1, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: code_project_codigo_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.code_project_codigo_id_seq', 38, true);


--
-- Name: code_project_proyecto_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.code_project_proyecto_id_seq', 7, true);


--
-- Name: cookie_consent_cookie_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.cookie_consent_cookie_id_seq', 3, true);


--
-- Name: cookie_consent_cookiegroup_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.cookie_consent_cookiegroup_id_seq', 2, true);


--
-- Name: cookie_consent_logitem_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.cookie_consent_logitem_id_seq', 77, true);


--
-- Name: core_pdf_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.core_pdf_id_seq', 1, true);


--
-- Name: core_secciones_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.core_secciones_id_seq', 9, true);


--
-- Name: cursos_curso_habilidades_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.cursos_curso_habilidades_id_seq', 6, true);


--
-- Name: cursos_curso_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.cursos_curso_id_seq', 6, true);


--
-- Name: cursos_habilidad_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.cursos_habilidad_id_seq', 2, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 46, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 19, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 38, true);


--
-- Name: django_site_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.django_site_id_seq', 1, true);


--
-- Name: recomendaciones_recomendacion_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.recomendaciones_recomendacion_id_seq', 1, false);


--
-- Name: taggit_tag_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.taggit_tag_id_seq', 18, true);


--
-- Name: taggit_taggeditem_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ego
--

SELECT pg_catalog.setval('public.taggit_taggeditem_id_seq', 23, true);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: code_project_codigo code_project_codigo_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.code_project_codigo
    ADD CONSTRAINT code_project_codigo_pkey PRIMARY KEY (id);


--
-- Name: code_project_proyecto code_project_proyecto_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.code_project_proyecto
    ADD CONSTRAINT code_project_proyecto_pkey PRIMARY KEY (id);


--
-- Name: cookie_consent_cookie cookie_consent_cookie_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.cookie_consent_cookie
    ADD CONSTRAINT cookie_consent_cookie_pkey PRIMARY KEY (id);


--
-- Name: cookie_consent_cookiegroup cookie_consent_cookiegroup_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.cookie_consent_cookiegroup
    ADD CONSTRAINT cookie_consent_cookiegroup_pkey PRIMARY KEY (id);


--
-- Name: cookie_consent_logitem cookie_consent_logitem_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.cookie_consent_logitem
    ADD CONSTRAINT cookie_consent_logitem_pkey PRIMARY KEY (id);


--
-- Name: core_pdf core_pdf_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.core_pdf
    ADD CONSTRAINT core_pdf_pkey PRIMARY KEY (id);


--
-- Name: core_secciones core_secciones_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.core_secciones
    ADD CONSTRAINT core_secciones_pkey PRIMARY KEY (id);


--
-- Name: cursos_curso_habilidades cursos_curso_habilidades_curso_id_habilidad_id_7ab8e6b7_uniq; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.cursos_curso_habilidades
    ADD CONSTRAINT cursos_curso_habilidades_curso_id_habilidad_id_7ab8e6b7_uniq UNIQUE (curso_id, habilidad_id);


--
-- Name: cursos_curso_habilidades cursos_curso_habilidades_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.cursos_curso_habilidades
    ADD CONSTRAINT cursos_curso_habilidades_pkey PRIMARY KEY (id);


--
-- Name: cursos_curso cursos_curso_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.cursos_curso
    ADD CONSTRAINT cursos_curso_pkey PRIMARY KEY (id);


--
-- Name: cursos_habilidad cursos_habilidad_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.cursos_habilidad
    ADD CONSTRAINT cursos_habilidad_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: django_site django_site_domain_a2e37b91_uniq; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.django_site
    ADD CONSTRAINT django_site_domain_a2e37b91_uniq UNIQUE (domain);


--
-- Name: django_site django_site_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.django_site
    ADD CONSTRAINT django_site_pkey PRIMARY KEY (id);


--
-- Name: recomendaciones_recomendacion recomendaciones_recomendacion_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.recomendaciones_recomendacion
    ADD CONSTRAINT recomendaciones_recomendacion_pkey PRIMARY KEY (id);


--
-- Name: taggit_tag taggit_tag_name_key; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_name_key UNIQUE (name);


--
-- Name: taggit_tag taggit_tag_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_pkey PRIMARY KEY (id);


--
-- Name: taggit_tag taggit_tag_slug_key; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_slug_key UNIQUE (slug);


--
-- Name: taggit_taggeditem taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uni; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uni UNIQUE (content_type_id, object_id, tag_id);


--
-- Name: taggit_taggeditem taggit_taggeditem_pkey; Type: CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_pkey PRIMARY KEY (id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: code_project_codigo_proyecto_id_010290b4; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX code_project_codigo_proyecto_id_010290b4 ON public.code_project_codigo USING btree (proyecto_id);


--
-- Name: cookie_consent_cookie_cookiegroup_id_96c0ab4b; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX cookie_consent_cookie_cookiegroup_id_96c0ab4b ON public.cookie_consent_cookie USING btree (cookiegroup_id);


--
-- Name: cookie_consent_logitem_cookiegroup_id_3bfbe953; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX cookie_consent_logitem_cookiegroup_id_3bfbe953 ON public.cookie_consent_logitem USING btree (cookiegroup_id);


--
-- Name: cursos_curso_habilidades_curso_id_d81e0f95; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX cursos_curso_habilidades_curso_id_d81e0f95 ON public.cursos_curso_habilidades USING btree (curso_id);


--
-- Name: cursos_curso_habilidades_habilidad_id_8ca1906e; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX cursos_curso_habilidades_habilidad_id_8ca1906e ON public.cursos_curso_habilidades USING btree (habilidad_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: django_site_domain_a2e37b91_like; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX django_site_domain_a2e37b91_like ON public.django_site USING btree (domain varchar_pattern_ops);


--
-- Name: taggit_tag_name_58eb2ed9_like; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX taggit_tag_name_58eb2ed9_like ON public.taggit_tag USING btree (name varchar_pattern_ops);


--
-- Name: taggit_tag_slug_6be58b2c_like; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX taggit_tag_slug_6be58b2c_like ON public.taggit_tag USING btree (slug varchar_pattern_ops);


--
-- Name: taggit_tagg_content_8fc721_idx; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX taggit_tagg_content_8fc721_idx ON public.taggit_taggeditem USING btree (content_type_id, object_id);


--
-- Name: taggit_taggeditem_content_type_id_9957a03c; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX taggit_taggeditem_content_type_id_9957a03c ON public.taggit_taggeditem USING btree (content_type_id);


--
-- Name: taggit_taggeditem_object_id_e2d7d1df; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX taggit_taggeditem_object_id_e2d7d1df ON public.taggit_taggeditem USING btree (object_id);


--
-- Name: taggit_taggeditem_tag_id_f4f5b767; Type: INDEX; Schema: public; Owner: ego
--

CREATE INDEX taggit_taggeditem_tag_id_f4f5b767 ON public.taggit_taggeditem USING btree (tag_id);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: code_project_codigo code_project_codigo_proyecto_id_010290b4_fk_code_proj; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.code_project_codigo
    ADD CONSTRAINT code_project_codigo_proyecto_id_010290b4_fk_code_proj FOREIGN KEY (proyecto_id) REFERENCES public.code_project_proyecto(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cookie_consent_cookie cookie_consent_cooki_cookiegroup_id_96c0ab4b_fk_cookie_co; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.cookie_consent_cookie
    ADD CONSTRAINT cookie_consent_cooki_cookiegroup_id_96c0ab4b_fk_cookie_co FOREIGN KEY (cookiegroup_id) REFERENCES public.cookie_consent_cookiegroup(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cookie_consent_logitem cookie_consent_logit_cookiegroup_id_3bfbe953_fk_cookie_co; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.cookie_consent_logitem
    ADD CONSTRAINT cookie_consent_logit_cookiegroup_id_3bfbe953_fk_cookie_co FOREIGN KEY (cookiegroup_id) REFERENCES public.cookie_consent_cookiegroup(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cursos_curso_habilidades cursos_curso_habilid_habilidad_id_8ca1906e_fk_cursos_ha; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.cursos_curso_habilidades
    ADD CONSTRAINT cursos_curso_habilid_habilidad_id_8ca1906e_fk_cursos_ha FOREIGN KEY (habilidad_id) REFERENCES public.cursos_habilidad(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: cursos_curso_habilidades cursos_curso_habilidades_curso_id_d81e0f95_fk_cursos_curso_id; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.cursos_curso_habilidades
    ADD CONSTRAINT cursos_curso_habilidades_curso_id_d81e0f95_fk_cursos_curso_id FOREIGN KEY (curso_id) REFERENCES public.cursos_curso(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: taggit_taggeditem taggit_taggeditem_content_type_id_9957a03c_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_content_type_id_9957a03c_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: taggit_taggeditem taggit_taggeditem_tag_id_f4f5b767_fk_taggit_tag_id; Type: FK CONSTRAINT; Schema: public; Owner: ego
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_tag_id_f4f5b767_fk_taggit_tag_id FOREIGN KEY (tag_id) REFERENCES public.taggit_tag(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

